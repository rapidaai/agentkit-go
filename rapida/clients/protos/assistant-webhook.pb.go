// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: assistant-webhook.proto

package lexatic_backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssistantWebhook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantEvents   []string               `protobuf:"bytes,2,rep,name=assistantEvents,proto3" json:"assistantEvents,omitempty"`
	Description       string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	HttpMethod        string                 `protobuf:"bytes,4,opt,name=httpMethod,proto3" json:"httpMethod,omitempty"`
	HttpUrl           string                 `protobuf:"bytes,5,opt,name=httpUrl,proto3" json:"httpUrl,omitempty"`
	HttpHeaders       map[string]string      `protobuf:"bytes,6,rep,name=httpHeaders,proto3" json:"httpHeaders,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HttpBody          map[string]string      `protobuf:"bytes,7,rep,name=httpBody,proto3" json:"httpBody,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TimeoutSecond     uint32                 `protobuf:"varint,19,opt,name=timeoutSecond,proto3" json:"timeoutSecond,omitempty"`
	ExecutionPriority uint32                 `protobuf:"varint,20,opt,name=executionPriority,proto3" json:"executionPriority,omitempty"`
	RetryStatusCodes  []string               `protobuf:"bytes,8,rep,name=retryStatusCodes,proto3" json:"retryStatusCodes,omitempty"`
	RetryCount        uint32                 `protobuf:"varint,9,opt,name=retryCount,proto3" json:"retryCount,omitempty"`
	AssistantId       uint64                 `protobuf:"varint,10,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Status            string                 `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	CreatedBy         uint64                 `protobuf:"varint,13,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedUser       *User                  `protobuf:"bytes,14,opt,name=createdUser,proto3" json:"createdUser,omitempty"`
	UpdatedBy         uint64                 `protobuf:"varint,15,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	UpdatedUser       *User                  `protobuf:"bytes,16,opt,name=updatedUser,proto3" json:"updatedUser,omitempty"`
	CreatedDate       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	UpdatedDate       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedDate,proto3" json:"updatedDate,omitempty"`
}

func (x *AssistantWebhook) Reset() {
	*x = AssistantWebhook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantWebhook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantWebhook) ProtoMessage() {}

func (x *AssistantWebhook) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantWebhook.ProtoReflect.Descriptor instead.
func (*AssistantWebhook) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{0}
}

func (x *AssistantWebhook) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssistantWebhook) GetAssistantEvents() []string {
	if x != nil {
		return x.AssistantEvents
	}
	return nil
}

func (x *AssistantWebhook) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AssistantWebhook) GetHttpMethod() string {
	if x != nil {
		return x.HttpMethod
	}
	return ""
}

func (x *AssistantWebhook) GetHttpUrl() string {
	if x != nil {
		return x.HttpUrl
	}
	return ""
}

func (x *AssistantWebhook) GetHttpHeaders() map[string]string {
	if x != nil {
		return x.HttpHeaders
	}
	return nil
}

func (x *AssistantWebhook) GetHttpBody() map[string]string {
	if x != nil {
		return x.HttpBody
	}
	return nil
}

func (x *AssistantWebhook) GetTimeoutSecond() uint32 {
	if x != nil {
		return x.TimeoutSecond
	}
	return 0
}

func (x *AssistantWebhook) GetExecutionPriority() uint32 {
	if x != nil {
		return x.ExecutionPriority
	}
	return 0
}

func (x *AssistantWebhook) GetRetryStatusCodes() []string {
	if x != nil {
		return x.RetryStatusCodes
	}
	return nil
}

func (x *AssistantWebhook) GetRetryCount() uint32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *AssistantWebhook) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *AssistantWebhook) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AssistantWebhook) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *AssistantWebhook) GetCreatedUser() *User {
	if x != nil {
		return x.CreatedUser
	}
	return nil
}

func (x *AssistantWebhook) GetUpdatedBy() uint64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *AssistantWebhook) GetUpdatedUser() *User {
	if x != nil {
		return x.UpdatedUser
	}
	return nil
}

func (x *AssistantWebhook) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *AssistantWebhook) GetUpdatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDate
	}
	return nil
}

type AssistantWebhookLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WebhookId               uint64                 `protobuf:"varint,2,opt,name=webhookId,proto3" json:"webhookId,omitempty"`
	Request                 *structpb.Struct       `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	Response                *structpb.Struct       `protobuf:"bytes,4,opt,name=response,proto3" json:"response,omitempty"`
	Status                  string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedDate             *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	UpdatedDate             *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedDate,proto3" json:"updatedDate,omitempty"`
	AssistantId             uint64                 `protobuf:"varint,8,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	ProjectId               uint64                 `protobuf:"varint,9,opt,name=projectId,proto3" json:"projectId,omitempty"`
	OrganizationId          uint64                 `protobuf:"varint,10,opt,name=organizationId,proto3" json:"organizationId,omitempty"`
	AssistantConversationId uint64                 `protobuf:"varint,11,opt,name=assistantConversationId,proto3" json:"assistantConversationId,omitempty"`
	AssetPrefix             string                 `protobuf:"bytes,12,opt,name=assetPrefix,proto3" json:"assetPrefix,omitempty"`
	Event                   string                 `protobuf:"bytes,13,opt,name=event,proto3" json:"event,omitempty"`
	ResponseStatus          uint64                 `protobuf:"varint,14,opt,name=responseStatus,proto3" json:"responseStatus,omitempty"`
	TimeTaken               uint64                 `protobuf:"varint,15,opt,name=timeTaken,proto3" json:"timeTaken,omitempty"`
	RetryCount              uint32                 `protobuf:"varint,16,opt,name=retryCount,proto3" json:"retryCount,omitempty"`
	HttpMethod              string                 `protobuf:"bytes,17,opt,name=httpMethod,proto3" json:"httpMethod,omitempty"`
	HttpUrl                 string                 `protobuf:"bytes,18,opt,name=httpUrl,proto3" json:"httpUrl,omitempty"`
}

func (x *AssistantWebhookLog) Reset() {
	*x = AssistantWebhookLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantWebhookLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantWebhookLog) ProtoMessage() {}

func (x *AssistantWebhookLog) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantWebhookLog.ProtoReflect.Descriptor instead.
func (*AssistantWebhookLog) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{1}
}

func (x *AssistantWebhookLog) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssistantWebhookLog) GetWebhookId() uint64 {
	if x != nil {
		return x.WebhookId
	}
	return 0
}

func (x *AssistantWebhookLog) GetRequest() *structpb.Struct {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *AssistantWebhookLog) GetResponse() *structpb.Struct {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *AssistantWebhookLog) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AssistantWebhookLog) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *AssistantWebhookLog) GetUpdatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDate
	}
	return nil
}

func (x *AssistantWebhookLog) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *AssistantWebhookLog) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AssistantWebhookLog) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *AssistantWebhookLog) GetAssistantConversationId() uint64 {
	if x != nil {
		return x.AssistantConversationId
	}
	return 0
}

func (x *AssistantWebhookLog) GetAssetPrefix() string {
	if x != nil {
		return x.AssetPrefix
	}
	return ""
}

func (x *AssistantWebhookLog) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *AssistantWebhookLog) GetResponseStatus() uint64 {
	if x != nil {
		return x.ResponseStatus
	}
	return 0
}

func (x *AssistantWebhookLog) GetTimeTaken() uint64 {
	if x != nil {
		return x.TimeTaken
	}
	return 0
}

func (x *AssistantWebhookLog) GetRetryCount() uint32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *AssistantWebhookLog) GetHttpMethod() string {
	if x != nil {
		return x.HttpMethod
	}
	return ""
}

func (x *AssistantWebhookLog) GetHttpUrl() string {
	if x != nil {
		return x.HttpUrl
	}
	return ""
}

type CreateAssistantWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantEvents   []string          `protobuf:"bytes,2,rep,name=assistantEvents,proto3" json:"assistantEvents,omitempty"`
	Description       string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	HttpMethod        string            `protobuf:"bytes,4,opt,name=httpMethod,proto3" json:"httpMethod,omitempty"`
	HttpUrl           string            `protobuf:"bytes,5,opt,name=httpUrl,proto3" json:"httpUrl,omitempty"`
	HttpHeaders       map[string]string `protobuf:"bytes,6,rep,name=httpHeaders,proto3" json:"httpHeaders,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HttpBody          map[string]string `protobuf:"bytes,11,rep,name=httpBody,proto3" json:"httpBody,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TimeoutSecond     uint32            `protobuf:"varint,7,opt,name=timeoutSecond,proto3" json:"timeoutSecond,omitempty"`
	RetryStatusCodes  []string          `protobuf:"bytes,8,rep,name=retryStatusCodes,proto3" json:"retryStatusCodes,omitempty"`
	MaxRetryCount     uint32            `protobuf:"varint,9,opt,name=maxRetryCount,proto3" json:"maxRetryCount,omitempty"`
	AssistantId       uint64            `protobuf:"varint,10,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	ExecutionPriority uint32            `protobuf:"varint,20,opt,name=executionPriority,proto3" json:"executionPriority,omitempty"`
}

func (x *CreateAssistantWebhookRequest) Reset() {
	*x = CreateAssistantWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssistantWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssistantWebhookRequest) ProtoMessage() {}

func (x *CreateAssistantWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssistantWebhookRequest.ProtoReflect.Descriptor instead.
func (*CreateAssistantWebhookRequest) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAssistantWebhookRequest) GetAssistantEvents() []string {
	if x != nil {
		return x.AssistantEvents
	}
	return nil
}

func (x *CreateAssistantWebhookRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAssistantWebhookRequest) GetHttpMethod() string {
	if x != nil {
		return x.HttpMethod
	}
	return ""
}

func (x *CreateAssistantWebhookRequest) GetHttpUrl() string {
	if x != nil {
		return x.HttpUrl
	}
	return ""
}

func (x *CreateAssistantWebhookRequest) GetHttpHeaders() map[string]string {
	if x != nil {
		return x.HttpHeaders
	}
	return nil
}

func (x *CreateAssistantWebhookRequest) GetHttpBody() map[string]string {
	if x != nil {
		return x.HttpBody
	}
	return nil
}

func (x *CreateAssistantWebhookRequest) GetTimeoutSecond() uint32 {
	if x != nil {
		return x.TimeoutSecond
	}
	return 0
}

func (x *CreateAssistantWebhookRequest) GetRetryStatusCodes() []string {
	if x != nil {
		return x.RetryStatusCodes
	}
	return nil
}

func (x *CreateAssistantWebhookRequest) GetMaxRetryCount() uint32 {
	if x != nil {
		return x.MaxRetryCount
	}
	return 0
}

func (x *CreateAssistantWebhookRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *CreateAssistantWebhookRequest) GetExecutionPriority() uint32 {
	if x != nil {
		return x.ExecutionPriority
	}
	return 0
}

type UpdateAssistantWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantEvents   []string          `protobuf:"bytes,2,rep,name=assistantEvents,proto3" json:"assistantEvents,omitempty"`
	Description       string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	HttpMethod        string            `protobuf:"bytes,4,opt,name=httpMethod,proto3" json:"httpMethod,omitempty"`
	HttpUrl           string            `protobuf:"bytes,5,opt,name=httpUrl,proto3" json:"httpUrl,omitempty"`
	HttpHeaders       map[string]string `protobuf:"bytes,6,rep,name=httpHeaders,proto3" json:"httpHeaders,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HttpBody          map[string]string `protobuf:"bytes,11,rep,name=httpBody,proto3" json:"httpBody,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TimeoutSecond     uint32            `protobuf:"varint,7,opt,name=timeoutSecond,proto3" json:"timeoutSecond,omitempty"`
	RetryStatusCodes  []string          `protobuf:"bytes,8,rep,name=retryStatusCodes,proto3" json:"retryStatusCodes,omitempty"`
	MaxRetryCount     uint32            `protobuf:"varint,9,opt,name=maxRetryCount,proto3" json:"maxRetryCount,omitempty"`
	AssistantId       uint64            `protobuf:"varint,10,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	ExecutionPriority uint32            `protobuf:"varint,20,opt,name=executionPriority,proto3" json:"executionPriority,omitempty"`
}

func (x *UpdateAssistantWebhookRequest) Reset() {
	*x = UpdateAssistantWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssistantWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssistantWebhookRequest) ProtoMessage() {}

func (x *UpdateAssistantWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssistantWebhookRequest.ProtoReflect.Descriptor instead.
func (*UpdateAssistantWebhookRequest) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAssistantWebhookRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAssistantWebhookRequest) GetAssistantEvents() []string {
	if x != nil {
		return x.AssistantEvents
	}
	return nil
}

func (x *UpdateAssistantWebhookRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAssistantWebhookRequest) GetHttpMethod() string {
	if x != nil {
		return x.HttpMethod
	}
	return ""
}

func (x *UpdateAssistantWebhookRequest) GetHttpUrl() string {
	if x != nil {
		return x.HttpUrl
	}
	return ""
}

func (x *UpdateAssistantWebhookRequest) GetHttpHeaders() map[string]string {
	if x != nil {
		return x.HttpHeaders
	}
	return nil
}

func (x *UpdateAssistantWebhookRequest) GetHttpBody() map[string]string {
	if x != nil {
		return x.HttpBody
	}
	return nil
}

func (x *UpdateAssistantWebhookRequest) GetTimeoutSecond() uint32 {
	if x != nil {
		return x.TimeoutSecond
	}
	return 0
}

func (x *UpdateAssistantWebhookRequest) GetRetryStatusCodes() []string {
	if x != nil {
		return x.RetryStatusCodes
	}
	return nil
}

func (x *UpdateAssistantWebhookRequest) GetMaxRetryCount() uint32 {
	if x != nil {
		return x.MaxRetryCount
	}
	return 0
}

func (x *UpdateAssistantWebhookRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *UpdateAssistantWebhookRequest) GetExecutionPriority() uint32 {
	if x != nil {
		return x.ExecutionPriority
	}
	return 0
}

type GetAssistantWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantId uint64 `protobuf:"varint,2,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
}

func (x *GetAssistantWebhookRequest) Reset() {
	*x = GetAssistantWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantWebhookRequest) ProtoMessage() {}

func (x *GetAssistantWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantWebhookRequest.ProtoReflect.Descriptor instead.
func (*GetAssistantWebhookRequest) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{4}
}

func (x *GetAssistantWebhookRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAssistantWebhookRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

type DeleteAssistantWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantId uint64 `protobuf:"varint,2,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
}

func (x *DeleteAssistantWebhookRequest) Reset() {
	*x = DeleteAssistantWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAssistantWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssistantWebhookRequest) ProtoMessage() {}

func (x *DeleteAssistantWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssistantWebhookRequest.ProtoReflect.Descriptor instead.
func (*DeleteAssistantWebhookRequest) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteAssistantWebhookRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteAssistantWebhookRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

type GetAssistantWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success bool              `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data    *AssistantWebhook `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   *Error            `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetAssistantWebhookResponse) Reset() {
	*x = GetAssistantWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantWebhookResponse) ProtoMessage() {}

func (x *GetAssistantWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantWebhookResponse.ProtoReflect.Descriptor instead.
func (*GetAssistantWebhookResponse) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{6}
}

func (x *GetAssistantWebhookResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAssistantWebhookResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAssistantWebhookResponse) GetData() *AssistantWebhook {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAssistantWebhookResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetAllAssistantWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookId   uint64      `protobuf:"varint,1,opt,name=webhookId,proto3" json:"webhookId,omitempty"`
	AssistantId uint64      `protobuf:"varint,4,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Paginate    *Paginate   `protobuf:"bytes,2,opt,name=paginate,proto3" json:"paginate,omitempty"`
	Criterias   []*Criteria `protobuf:"bytes,3,rep,name=criterias,proto3" json:"criterias,omitempty"`
}

func (x *GetAllAssistantWebhookRequest) Reset() {
	*x = GetAllAssistantWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantWebhookRequest) ProtoMessage() {}

func (x *GetAllAssistantWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantWebhookRequest.ProtoReflect.Descriptor instead.
func (*GetAllAssistantWebhookRequest) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllAssistantWebhookRequest) GetWebhookId() uint64 {
	if x != nil {
		return x.WebhookId
	}
	return 0
}

func (x *GetAllAssistantWebhookRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *GetAllAssistantWebhookRequest) GetPaginate() *Paginate {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *GetAllAssistantWebhookRequest) GetCriterias() []*Criteria {
	if x != nil {
		return x.Criterias
	}
	return nil
}

type GetAllAssistantWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success   bool                `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data      []*AssistantWebhook `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error     *Error              `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Paginated *Paginated          `protobuf:"bytes,5,opt,name=paginated,proto3" json:"paginated,omitempty"`
}

func (x *GetAllAssistantWebhookResponse) Reset() {
	*x = GetAllAssistantWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantWebhookResponse) ProtoMessage() {}

func (x *GetAllAssistantWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantWebhookResponse.ProtoReflect.Descriptor instead.
func (*GetAllAssistantWebhookResponse) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllAssistantWebhookResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllAssistantWebhookResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAllAssistantWebhookResponse) GetData() []*AssistantWebhook {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAllAssistantWebhookResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAllAssistantWebhookResponse) GetPaginated() *Paginated {
	if x != nil {
		return x.Paginated
	}
	return nil
}

type GetAllAssistantWebhookLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64      `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Paginate  *Paginate   `protobuf:"bytes,3,opt,name=paginate,proto3" json:"paginate,omitempty"`
	Criterias []*Criteria `protobuf:"bytes,4,rep,name=criterias,proto3" json:"criterias,omitempty"`
	Order     *Ordering   `protobuf:"bytes,5,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *GetAllAssistantWebhookLogRequest) Reset() {
	*x = GetAllAssistantWebhookLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantWebhookLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantWebhookLogRequest) ProtoMessage() {}

func (x *GetAllAssistantWebhookLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantWebhookLogRequest.ProtoReflect.Descriptor instead.
func (*GetAllAssistantWebhookLogRequest) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllAssistantWebhookLogRequest) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetAllAssistantWebhookLogRequest) GetPaginate() *Paginate {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *GetAllAssistantWebhookLogRequest) GetCriterias() []*Criteria {
	if x != nil {
		return x.Criterias
	}
	return nil
}

func (x *GetAllAssistantWebhookLogRequest) GetOrder() *Ordering {
	if x != nil {
		return x.Order
	}
	return nil
}

type GetAssistantWebhookLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Id        uint64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAssistantWebhookLogRequest) Reset() {
	*x = GetAssistantWebhookLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantWebhookLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantWebhookLogRequest) ProtoMessage() {}

func (x *GetAssistantWebhookLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantWebhookLogRequest.ProtoReflect.Descriptor instead.
func (*GetAssistantWebhookLogRequest) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{10}
}

func (x *GetAssistantWebhookLogRequest) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetAssistantWebhookLogRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAssistantWebhookLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success bool                 `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data    *AssistantWebhookLog `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   *Error               `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetAssistantWebhookLogResponse) Reset() {
	*x = GetAssistantWebhookLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantWebhookLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantWebhookLogResponse) ProtoMessage() {}

func (x *GetAssistantWebhookLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantWebhookLogResponse.ProtoReflect.Descriptor instead.
func (*GetAssistantWebhookLogResponse) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{11}
}

func (x *GetAssistantWebhookLogResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAssistantWebhookLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAssistantWebhookLogResponse) GetData() *AssistantWebhookLog {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAssistantWebhookLogResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetAllAssistantWebhookLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success   bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data      []*AssistantWebhookLog `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error     *Error                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Paginated *Paginated             `protobuf:"bytes,5,opt,name=paginated,proto3" json:"paginated,omitempty"`
}

func (x *GetAllAssistantWebhookLogResponse) Reset() {
	*x = GetAllAssistantWebhookLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_webhook_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantWebhookLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantWebhookLogResponse) ProtoMessage() {}

func (x *GetAllAssistantWebhookLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_webhook_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantWebhookLogResponse.ProtoReflect.Descriptor instead.
func (*GetAllAssistantWebhookLogResponse) Descriptor() ([]byte, []int) {
	return file_assistant_webhook_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllAssistantWebhookLogResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllAssistantWebhookLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAllAssistantWebhookLogResponse) GetData() []*AssistantWebhookLog {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAllAssistantWebhookLogResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAllAssistantWebhookLogResponse) GetPaginated() *Paginated {
	if x != nil {
		return x.Paginated
	}
	return nil
}

var File_assistant_webhook_proto protoreflect.FileDescriptor

var file_assistant_webhook_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2d, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x07, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x74,
	0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x68, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x74,
	0x74, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x74, 0x74,
	0x70, 0x55, 0x72, 0x6c, 0x12, 0x52, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x68, 0x74, 0x74,
	0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x49, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70,
	0x42, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x42, 0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x10, 0x72, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x27, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x27,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xd9, 0x05, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x09,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x31,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3c,
	0x0a, 0x17, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x17, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x6b,
	0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x74, 0x74, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x74, 0x74, 0x70, 0x55, 0x72, 0x6c, 0x22, 0xa7, 0x05, 0x0a,
	0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x74,
	0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x68, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x74,
	0x74, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x74, 0x74,
	0x70, 0x55, 0x72, 0x6c, 0x12, 0x5f, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x56, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64,
	0x79, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x1a, 0x3e, 0x0a, 0x10, 0x48, 0x74, 0x74,
	0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x48, 0x74, 0x74,
	0x70, 0x42, 0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbb, 0x05, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x74, 0x74, 0x70,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x74,
	0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x74, 0x74, 0x70,
	0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x74, 0x74, 0x70, 0x55,
	0x72, 0x6c, 0x12, 0x5f, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x56, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x74,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x1a, 0x3e, 0x0a, 0x10, 0x48, 0x74, 0x74, 0x70, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x48, 0x74, 0x74, 0x70, 0x42,
	0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x56, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x1d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xb7, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x63, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x09, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64,
	0x22, 0xb5, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x27,
	0x0a, 0x09, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x09, 0x63, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xa4, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4c,
	0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd1, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x28, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x78, 0x61, 0x74, 0x69, 0x63,
	0x2f, 0x77, 0x65, 0x62, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x6c, 0x65, 0x78, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_assistant_webhook_proto_rawDescOnce sync.Once
	file_assistant_webhook_proto_rawDescData = file_assistant_webhook_proto_rawDesc
)

func file_assistant_webhook_proto_rawDescGZIP() []byte {
	file_assistant_webhook_proto_rawDescOnce.Do(func() {
		file_assistant_webhook_proto_rawDescData = protoimpl.X.CompressGZIP(file_assistant_webhook_proto_rawDescData)
	})
	return file_assistant_webhook_proto_rawDescData
}

var file_assistant_webhook_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_assistant_webhook_proto_goTypes = []any{
	(*AssistantWebhook)(nil),                  // 0: assistant_api.AssistantWebhook
	(*AssistantWebhookLog)(nil),               // 1: assistant_api.AssistantWebhookLog
	(*CreateAssistantWebhookRequest)(nil),     // 2: assistant_api.CreateAssistantWebhookRequest
	(*UpdateAssistantWebhookRequest)(nil),     // 3: assistant_api.UpdateAssistantWebhookRequest
	(*GetAssistantWebhookRequest)(nil),        // 4: assistant_api.GetAssistantWebhookRequest
	(*DeleteAssistantWebhookRequest)(nil),     // 5: assistant_api.DeleteAssistantWebhookRequest
	(*GetAssistantWebhookResponse)(nil),       // 6: assistant_api.GetAssistantWebhookResponse
	(*GetAllAssistantWebhookRequest)(nil),     // 7: assistant_api.GetAllAssistantWebhookRequest
	(*GetAllAssistantWebhookResponse)(nil),    // 8: assistant_api.GetAllAssistantWebhookResponse
	(*GetAllAssistantWebhookLogRequest)(nil),  // 9: assistant_api.GetAllAssistantWebhookLogRequest
	(*GetAssistantWebhookLogRequest)(nil),     // 10: assistant_api.GetAssistantWebhookLogRequest
	(*GetAssistantWebhookLogResponse)(nil),    // 11: assistant_api.GetAssistantWebhookLogResponse
	(*GetAllAssistantWebhookLogResponse)(nil), // 12: assistant_api.GetAllAssistantWebhookLogResponse
	nil,                           // 13: assistant_api.AssistantWebhook.HttpHeadersEntry
	nil,                           // 14: assistant_api.AssistantWebhook.HttpBodyEntry
	nil,                           // 15: assistant_api.CreateAssistantWebhookRequest.HttpHeadersEntry
	nil,                           // 16: assistant_api.CreateAssistantWebhookRequest.HttpBodyEntry
	nil,                           // 17: assistant_api.UpdateAssistantWebhookRequest.HttpHeadersEntry
	nil,                           // 18: assistant_api.UpdateAssistantWebhookRequest.HttpBodyEntry
	(*User)(nil),                  // 19: User
	(*timestamppb.Timestamp)(nil), // 20: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 21: google.protobuf.Struct
	(*Error)(nil),                 // 22: Error
	(*Paginate)(nil),              // 23: Paginate
	(*Criteria)(nil),              // 24: Criteria
	(*Paginated)(nil),             // 25: Paginated
	(*Ordering)(nil),              // 26: Ordering
}
var file_assistant_webhook_proto_depIdxs = []int32{
	13, // 0: assistant_api.AssistantWebhook.httpHeaders:type_name -> assistant_api.AssistantWebhook.HttpHeadersEntry
	14, // 1: assistant_api.AssistantWebhook.httpBody:type_name -> assistant_api.AssistantWebhook.HttpBodyEntry
	19, // 2: assistant_api.AssistantWebhook.createdUser:type_name -> User
	19, // 3: assistant_api.AssistantWebhook.updatedUser:type_name -> User
	20, // 4: assistant_api.AssistantWebhook.createdDate:type_name -> google.protobuf.Timestamp
	20, // 5: assistant_api.AssistantWebhook.updatedDate:type_name -> google.protobuf.Timestamp
	21, // 6: assistant_api.AssistantWebhookLog.request:type_name -> google.protobuf.Struct
	21, // 7: assistant_api.AssistantWebhookLog.response:type_name -> google.protobuf.Struct
	20, // 8: assistant_api.AssistantWebhookLog.createdDate:type_name -> google.protobuf.Timestamp
	20, // 9: assistant_api.AssistantWebhookLog.updatedDate:type_name -> google.protobuf.Timestamp
	15, // 10: assistant_api.CreateAssistantWebhookRequest.httpHeaders:type_name -> assistant_api.CreateAssistantWebhookRequest.HttpHeadersEntry
	16, // 11: assistant_api.CreateAssistantWebhookRequest.httpBody:type_name -> assistant_api.CreateAssistantWebhookRequest.HttpBodyEntry
	17, // 12: assistant_api.UpdateAssistantWebhookRequest.httpHeaders:type_name -> assistant_api.UpdateAssistantWebhookRequest.HttpHeadersEntry
	18, // 13: assistant_api.UpdateAssistantWebhookRequest.httpBody:type_name -> assistant_api.UpdateAssistantWebhookRequest.HttpBodyEntry
	0,  // 14: assistant_api.GetAssistantWebhookResponse.data:type_name -> assistant_api.AssistantWebhook
	22, // 15: assistant_api.GetAssistantWebhookResponse.error:type_name -> Error
	23, // 16: assistant_api.GetAllAssistantWebhookRequest.paginate:type_name -> Paginate
	24, // 17: assistant_api.GetAllAssistantWebhookRequest.criterias:type_name -> Criteria
	0,  // 18: assistant_api.GetAllAssistantWebhookResponse.data:type_name -> assistant_api.AssistantWebhook
	22, // 19: assistant_api.GetAllAssistantWebhookResponse.error:type_name -> Error
	25, // 20: assistant_api.GetAllAssistantWebhookResponse.paginated:type_name -> Paginated
	23, // 21: assistant_api.GetAllAssistantWebhookLogRequest.paginate:type_name -> Paginate
	24, // 22: assistant_api.GetAllAssistantWebhookLogRequest.criterias:type_name -> Criteria
	26, // 23: assistant_api.GetAllAssistantWebhookLogRequest.order:type_name -> Ordering
	1,  // 24: assistant_api.GetAssistantWebhookLogResponse.data:type_name -> assistant_api.AssistantWebhookLog
	22, // 25: assistant_api.GetAssistantWebhookLogResponse.error:type_name -> Error
	1,  // 26: assistant_api.GetAllAssistantWebhookLogResponse.data:type_name -> assistant_api.AssistantWebhookLog
	22, // 27: assistant_api.GetAllAssistantWebhookLogResponse.error:type_name -> Error
	25, // 28: assistant_api.GetAllAssistantWebhookLogResponse.paginated:type_name -> Paginated
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_assistant_webhook_proto_init() }
func file_assistant_webhook_proto_init() {
	if File_assistant_webhook_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_assistant_webhook_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantWebhook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_webhook_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantWebhookLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_webhook_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAssistantWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_webhook_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAssistantWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_webhook_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetAssistantWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_webhook_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAssistantWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_webhook_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetAssistantWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_webhook_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_webhook_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_webhook_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantWebhookLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_webhook_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetAssistantWebhookLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_webhook_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetAssistantWebhookLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_webhook_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantWebhookLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_assistant_webhook_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_assistant_webhook_proto_goTypes,
		DependencyIndexes: file_assistant_webhook_proto_depIdxs,
		MessageInfos:      file_assistant_webhook_proto_msgTypes,
	}.Build()
	File_assistant_webhook_proto = out.File
	file_assistant_webhook_proto_rawDesc = nil
	file_assistant_webhook_proto_goTypes = nil
	file_assistant_webhook_proto_depIdxs = nil
}
