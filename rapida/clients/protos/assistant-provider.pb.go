// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: assistant-provider.proto

package lexatic_backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateAssistantVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId         uint64 `protobuf:"varint,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	AssistantProviderId uint64 `protobuf:"varint,2,opt,name=assistantProviderId,proto3" json:"assistantProviderId,omitempty"`
	AssistantProvider   string `protobuf:"bytes,3,opt,name=assistantProvider,proto3" json:"assistantProvider,omitempty"`
}

func (x *UpdateAssistantVersionRequest) Reset() {
	*x = UpdateAssistantVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_provider_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssistantVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssistantVersionRequest) ProtoMessage() {}

func (x *UpdateAssistantVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_provider_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssistantVersionRequest.ProtoReflect.Descriptor instead.
func (*UpdateAssistantVersionRequest) Descriptor() ([]byte, []int) {
	return file_assistant_provider_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateAssistantVersionRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *UpdateAssistantVersionRequest) GetAssistantProviderId() uint64 {
	if x != nil {
		return x.AssistantProviderId
	}
	return 0
}

func (x *UpdateAssistantVersionRequest) GetAssistantProvider() string {
	if x != nil {
		return x.AssistantProvider
	}
	return ""
}

type CreateAssistantProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId uint64 `protobuf:"varint,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are assignable to AssistantProvider:
	//
	//	*CreateAssistantProviderRequest_Model
	//	*CreateAssistantProviderRequest_Agentkit
	//	*CreateAssistantProviderRequest_Websocket
	AssistantProvider isCreateAssistantProviderRequest_AssistantProvider `protobuf_oneof:"assistantProvider"`
}

func (x *CreateAssistantProviderRequest) Reset() {
	*x = CreateAssistantProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_provider_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssistantProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssistantProviderRequest) ProtoMessage() {}

func (x *CreateAssistantProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_provider_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssistantProviderRequest.ProtoReflect.Descriptor instead.
func (*CreateAssistantProviderRequest) Descriptor() ([]byte, []int) {
	return file_assistant_provider_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAssistantProviderRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *CreateAssistantProviderRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (m *CreateAssistantProviderRequest) GetAssistantProvider() isCreateAssistantProviderRequest_AssistantProvider {
	if m != nil {
		return m.AssistantProvider
	}
	return nil
}

func (x *CreateAssistantProviderRequest) GetModel() *CreateAssistantProviderRequest_CreateAssistantProviderModel {
	if x, ok := x.GetAssistantProvider().(*CreateAssistantProviderRequest_Model); ok {
		return x.Model
	}
	return nil
}

func (x *CreateAssistantProviderRequest) GetAgentkit() *CreateAssistantProviderRequest_CreateAssistantProviderAgentkit {
	if x, ok := x.GetAssistantProvider().(*CreateAssistantProviderRequest_Agentkit); ok {
		return x.Agentkit
	}
	return nil
}

func (x *CreateAssistantProviderRequest) GetWebsocket() *CreateAssistantProviderRequest_CreateAssistantProviderWebsocket {
	if x, ok := x.GetAssistantProvider().(*CreateAssistantProviderRequest_Websocket); ok {
		return x.Websocket
	}
	return nil
}

type isCreateAssistantProviderRequest_AssistantProvider interface {
	isCreateAssistantProviderRequest_AssistantProvider()
}

type CreateAssistantProviderRequest_Model struct {
	Model *CreateAssistantProviderRequest_CreateAssistantProviderModel `protobuf:"bytes,50,opt,name=model,proto3,oneof"`
}

type CreateAssistantProviderRequest_Agentkit struct {
	Agentkit *CreateAssistantProviderRequest_CreateAssistantProviderAgentkit `protobuf:"bytes,51,opt,name=agentkit,proto3,oneof"`
}

type CreateAssistantProviderRequest_Websocket struct {
	Websocket *CreateAssistantProviderRequest_CreateAssistantProviderWebsocket `protobuf:"bytes,52,opt,name=websocket,proto3,oneof"`
}

func (*CreateAssistantProviderRequest_Model) isCreateAssistantProviderRequest_AssistantProvider() {}

func (*CreateAssistantProviderRequest_Agentkit) isCreateAssistantProviderRequest_AssistantProvider() {
}

func (*CreateAssistantProviderRequest_Websocket) isCreateAssistantProviderRequest_AssistantProvider() {
}

type AssistantProviderAgentkit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	AssistantId uint64                 `protobuf:"varint,3,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Status      string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Url         string                 `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Certificate string                 `protobuf:"bytes,6,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Metadata    map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatedBy   uint64                 `protobuf:"varint,13,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedUser *User                  `protobuf:"bytes,14,opt,name=createdUser,proto3" json:"createdUser,omitempty"`
	UpdatedBy   uint64                 `protobuf:"varint,15,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	UpdatedUser *User                  `protobuf:"bytes,16,opt,name=updatedUser,proto3" json:"updatedUser,omitempty"`
	CreatedDate *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	UpdatedDate *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedDate,proto3" json:"updatedDate,omitempty"`
}

func (x *AssistantProviderAgentkit) Reset() {
	*x = AssistantProviderAgentkit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_provider_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantProviderAgentkit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantProviderAgentkit) ProtoMessage() {}

func (x *AssistantProviderAgentkit) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_provider_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantProviderAgentkit.ProtoReflect.Descriptor instead.
func (*AssistantProviderAgentkit) Descriptor() ([]byte, []int) {
	return file_assistant_provider_proto_rawDescGZIP(), []int{2}
}

func (x *AssistantProviderAgentkit) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssistantProviderAgentkit) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AssistantProviderAgentkit) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *AssistantProviderAgentkit) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AssistantProviderAgentkit) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AssistantProviderAgentkit) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *AssistantProviderAgentkit) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AssistantProviderAgentkit) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *AssistantProviderAgentkit) GetCreatedUser() *User {
	if x != nil {
		return x.CreatedUser
	}
	return nil
}

func (x *AssistantProviderAgentkit) GetUpdatedBy() uint64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *AssistantProviderAgentkit) GetUpdatedUser() *User {
	if x != nil {
		return x.UpdatedUser
	}
	return nil
}

func (x *AssistantProviderAgentkit) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *AssistantProviderAgentkit) GetUpdatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDate
	}
	return nil
}

type AssistantProviderWebsocket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	AssistantId uint64            `protobuf:"varint,3,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Url         string            `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Headers     map[string]string `protobuf:"bytes,6,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Parameters  map[string]string `protobuf:"bytes,7,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Status      string                 `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	CreatedBy   uint64                 `protobuf:"varint,13,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedUser *User                  `protobuf:"bytes,14,opt,name=createdUser,proto3" json:"createdUser,omitempty"`
	UpdatedBy   uint64                 `protobuf:"varint,15,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	UpdatedUser *User                  `protobuf:"bytes,16,opt,name=updatedUser,proto3" json:"updatedUser,omitempty"`
	CreatedDate *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	UpdatedDate *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedDate,proto3" json:"updatedDate,omitempty"`
}

func (x *AssistantProviderWebsocket) Reset() {
	*x = AssistantProviderWebsocket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_provider_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantProviderWebsocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantProviderWebsocket) ProtoMessage() {}

func (x *AssistantProviderWebsocket) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_provider_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantProviderWebsocket.ProtoReflect.Descriptor instead.
func (*AssistantProviderWebsocket) Descriptor() ([]byte, []int) {
	return file_assistant_provider_proto_rawDescGZIP(), []int{3}
}

func (x *AssistantProviderWebsocket) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssistantProviderWebsocket) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AssistantProviderWebsocket) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *AssistantProviderWebsocket) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AssistantProviderWebsocket) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *AssistantProviderWebsocket) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *AssistantProviderWebsocket) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AssistantProviderWebsocket) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *AssistantProviderWebsocket) GetCreatedUser() *User {
	if x != nil {
		return x.CreatedUser
	}
	return nil
}

func (x *AssistantProviderWebsocket) GetUpdatedBy() uint64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *AssistantProviderWebsocket) GetUpdatedUser() *User {
	if x != nil {
		return x.UpdatedUser
	}
	return nil
}

func (x *AssistantProviderWebsocket) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *AssistantProviderWebsocket) GetUpdatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDate
	}
	return nil
}

type AssistantProviderModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Template    *TextChatCompletePrompt `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	Description string                  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AssistantId uint64                  `protobuf:"varint,4,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	// model etc
	ModelProviderId       uint64      `protobuf:"varint,6,opt,name=modelProviderId,proto3" json:"modelProviderId,omitempty"`
	ModelProviderName     string      `protobuf:"bytes,7,opt,name=modelProviderName,proto3" json:"modelProviderName,omitempty"`
	AssistantModelOptions []*Metadata `protobuf:"bytes,9,rep,name=assistantModelOptions,proto3" json:"assistantModelOptions,omitempty"`
	// status
	Status      string                 `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	CreatedBy   uint64                 `protobuf:"varint,13,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedUser *User                  `protobuf:"bytes,14,opt,name=createdUser,proto3" json:"createdUser,omitempty"`
	UpdatedBy   uint64                 `protobuf:"varint,15,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	UpdatedUser *User                  `protobuf:"bytes,16,opt,name=updatedUser,proto3" json:"updatedUser,omitempty"`
	CreatedDate *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	UpdatedDate *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedDate,proto3" json:"updatedDate,omitempty"`
}

func (x *AssistantProviderModel) Reset() {
	*x = AssistantProviderModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_provider_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantProviderModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantProviderModel) ProtoMessage() {}

func (x *AssistantProviderModel) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_provider_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantProviderModel.ProtoReflect.Descriptor instead.
func (*AssistantProviderModel) Descriptor() ([]byte, []int) {
	return file_assistant_provider_proto_rawDescGZIP(), []int{4}
}

func (x *AssistantProviderModel) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssistantProviderModel) GetTemplate() *TextChatCompletePrompt {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *AssistantProviderModel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AssistantProviderModel) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *AssistantProviderModel) GetModelProviderId() uint64 {
	if x != nil {
		return x.ModelProviderId
	}
	return 0
}

func (x *AssistantProviderModel) GetModelProviderName() string {
	if x != nil {
		return x.ModelProviderName
	}
	return ""
}

func (x *AssistantProviderModel) GetAssistantModelOptions() []*Metadata {
	if x != nil {
		return x.AssistantModelOptions
	}
	return nil
}

func (x *AssistantProviderModel) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AssistantProviderModel) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *AssistantProviderModel) GetCreatedUser() *User {
	if x != nil {
		return x.CreatedUser
	}
	return nil
}

func (x *AssistantProviderModel) GetUpdatedBy() uint64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *AssistantProviderModel) GetUpdatedUser() *User {
	if x != nil {
		return x.UpdatedUser
	}
	return nil
}

func (x *AssistantProviderModel) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *AssistantProviderModel) GetUpdatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDate
	}
	return nil
}

type GetAllAssistantProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paginate    *Paginate   `protobuf:"bytes,1,opt,name=paginate,proto3" json:"paginate,omitempty"`
	Criterias   []*Criteria `protobuf:"bytes,2,rep,name=criterias,proto3" json:"criterias,omitempty"`
	AssistantId uint64      `protobuf:"varint,5,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
}

func (x *GetAllAssistantProviderRequest) Reset() {
	*x = GetAllAssistantProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_provider_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantProviderRequest) ProtoMessage() {}

func (x *GetAllAssistantProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_provider_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantProviderRequest.ProtoReflect.Descriptor instead.
func (*GetAllAssistantProviderRequest) Descriptor() ([]byte, []int) {
	return file_assistant_provider_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllAssistantProviderRequest) GetPaginate() *Paginate {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *GetAllAssistantProviderRequest) GetCriterias() []*Criteria {
	if x != nil {
		return x.Criterias
	}
	return nil
}

func (x *GetAllAssistantProviderRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

type GetAssistantProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success bool  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are assignable to Data:
	//
	//	*GetAssistantProviderResponse_AssistantProviderModel
	//	*GetAssistantProviderResponse_AssistantProviderAgentkit
	//	*GetAssistantProviderResponse_AssistantProviderWebsocket
	Data  isGetAssistantProviderResponse_Data `protobuf_oneof:"data"`
	Error *Error                              `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetAssistantProviderResponse) Reset() {
	*x = GetAssistantProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_provider_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantProviderResponse) ProtoMessage() {}

func (x *GetAssistantProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_provider_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantProviderResponse.ProtoReflect.Descriptor instead.
func (*GetAssistantProviderResponse) Descriptor() ([]byte, []int) {
	return file_assistant_provider_proto_rawDescGZIP(), []int{6}
}

func (x *GetAssistantProviderResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAssistantProviderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (m *GetAssistantProviderResponse) GetData() isGetAssistantProviderResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *GetAssistantProviderResponse) GetAssistantProviderModel() *AssistantProviderModel {
	if x, ok := x.GetData().(*GetAssistantProviderResponse_AssistantProviderModel); ok {
		return x.AssistantProviderModel
	}
	return nil
}

func (x *GetAssistantProviderResponse) GetAssistantProviderAgentkit() *AssistantProviderAgentkit {
	if x, ok := x.GetData().(*GetAssistantProviderResponse_AssistantProviderAgentkit); ok {
		return x.AssistantProviderAgentkit
	}
	return nil
}

func (x *GetAssistantProviderResponse) GetAssistantProviderWebsocket() *AssistantProviderWebsocket {
	if x, ok := x.GetData().(*GetAssistantProviderResponse_AssistantProviderWebsocket); ok {
		return x.AssistantProviderWebsocket
	}
	return nil
}

func (x *GetAssistantProviderResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type isGetAssistantProviderResponse_Data interface {
	isGetAssistantProviderResponse_Data()
}

type GetAssistantProviderResponse_AssistantProviderModel struct {
	AssistantProviderModel *AssistantProviderModel `protobuf:"bytes,50,opt,name=assistantProviderModel,proto3,oneof"`
}

type GetAssistantProviderResponse_AssistantProviderAgentkit struct {
	AssistantProviderAgentkit *AssistantProviderAgentkit `protobuf:"bytes,51,opt,name=assistantProviderAgentkit,proto3,oneof"`
}

type GetAssistantProviderResponse_AssistantProviderWebsocket struct {
	AssistantProviderWebsocket *AssistantProviderWebsocket `protobuf:"bytes,52,opt,name=assistantProviderWebsocket,proto3,oneof"`
}

func (*GetAssistantProviderResponse_AssistantProviderModel) isGetAssistantProviderResponse_Data() {}

func (*GetAssistantProviderResponse_AssistantProviderAgentkit) isGetAssistantProviderResponse_Data() {
}

func (*GetAssistantProviderResponse_AssistantProviderWebsocket) isGetAssistantProviderResponse_Data() {
}

type GetAllAssistantProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                                                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success   bool                                                 `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data      []*GetAllAssistantProviderResponse_AssistantProvider `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error     *Error                                               `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Paginated *Paginated                                           `protobuf:"bytes,5,opt,name=paginated,proto3" json:"paginated,omitempty"`
}

func (x *GetAllAssistantProviderResponse) Reset() {
	*x = GetAllAssistantProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_provider_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantProviderResponse) ProtoMessage() {}

func (x *GetAllAssistantProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_provider_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantProviderResponse.ProtoReflect.Descriptor instead.
func (*GetAllAssistantProviderResponse) Descriptor() ([]byte, []int) {
	return file_assistant_provider_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllAssistantProviderResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllAssistantProviderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAllAssistantProviderResponse) GetData() []*GetAllAssistantProviderResponse_AssistantProvider {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAllAssistantProviderResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAllAssistantProviderResponse) GetPaginated() *Paginated {
	if x != nil {
		return x.Paginated
	}
	return nil
}

type CreateAssistantProviderRequest_CreateAssistantProviderModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template              *TextChatCompletePrompt `protobuf:"bytes,20,opt,name=template,proto3" json:"template,omitempty"`
	ModelProviderId       uint64                  `protobuf:"varint,21,opt,name=modelProviderId,proto3" json:"modelProviderId,omitempty"`
	ModelProviderName     string                  `protobuf:"bytes,22,opt,name=modelProviderName,proto3" json:"modelProviderName,omitempty"`
	AssistantModelOptions []*Metadata             `protobuf:"bytes,23,rep,name=assistantModelOptions,proto3" json:"assistantModelOptions,omitempty"`
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderModel) Reset() {
	*x = CreateAssistantProviderRequest_CreateAssistantProviderModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_provider_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssistantProviderRequest_CreateAssistantProviderModel) ProtoMessage() {}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderModel) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_provider_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssistantProviderRequest_CreateAssistantProviderModel.ProtoReflect.Descriptor instead.
func (*CreateAssistantProviderRequest_CreateAssistantProviderModel) Descriptor() ([]byte, []int) {
	return file_assistant_provider_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderModel) GetTemplate() *TextChatCompletePrompt {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderModel) GetModelProviderId() uint64 {
	if x != nil {
		return x.ModelProviderId
	}
	return 0
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderModel) GetModelProviderName() string {
	if x != nil {
		return x.ModelProviderName
	}
	return ""
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderModel) GetAssistantModelOptions() []*Metadata {
	if x != nil {
		return x.AssistantModelOptions
	}
	return nil
}

type CreateAssistantProviderRequest_CreateAssistantProviderAgentkit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentKitUrl string            `protobuf:"bytes,10,opt,name=agentKitUrl,proto3" json:"agentKitUrl,omitempty"`
	Certificate string            `protobuf:"bytes,11,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Metadata    map[string]string `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderAgentkit) Reset() {
	*x = CreateAssistantProviderRequest_CreateAssistantProviderAgentkit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_provider_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderAgentkit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssistantProviderRequest_CreateAssistantProviderAgentkit) ProtoMessage() {}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderAgentkit) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_provider_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssistantProviderRequest_CreateAssistantProviderAgentkit.ProtoReflect.Descriptor instead.
func (*CreateAssistantProviderRequest_CreateAssistantProviderAgentkit) Descriptor() ([]byte, []int) {
	return file_assistant_provider_proto_rawDescGZIP(), []int{1, 1}
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderAgentkit) GetAgentKitUrl() string {
	if x != nil {
		return x.AgentKitUrl
	}
	return ""
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderAgentkit) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderAgentkit) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CreateAssistantProviderRequest_CreateAssistantProviderWebsocket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebsocketUrl         string            `protobuf:"bytes,30,opt,name=websocketUrl,proto3" json:"websocketUrl,omitempty"`
	Headers              map[string]string `protobuf:"bytes,31,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ConnectionParameters map[string]string `protobuf:"bytes,32,rep,name=connectionParameters,proto3" json:"connectionParameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderWebsocket) Reset() {
	*x = CreateAssistantProviderRequest_CreateAssistantProviderWebsocket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_provider_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderWebsocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssistantProviderRequest_CreateAssistantProviderWebsocket) ProtoMessage() {}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderWebsocket) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_provider_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssistantProviderRequest_CreateAssistantProviderWebsocket.ProtoReflect.Descriptor instead.
func (*CreateAssistantProviderRequest_CreateAssistantProviderWebsocket) Descriptor() ([]byte, []int) {
	return file_assistant_provider_proto_rawDescGZIP(), []int{1, 2}
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderWebsocket) GetWebsocketUrl() string {
	if x != nil {
		return x.WebsocketUrl
	}
	return ""
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderWebsocket) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CreateAssistantProviderRequest_CreateAssistantProviderWebsocket) GetConnectionParameters() map[string]string {
	if x != nil {
		return x.ConnectionParameters
	}
	return nil
}

type GetAllAssistantProviderResponse_AssistantProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to AssistantProvider:
	//
	//	*GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderModel
	//	*GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderAgentkit
	//	*GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderWebsocket
	AssistantProvider isGetAllAssistantProviderResponse_AssistantProvider_AssistantProvider `protobuf_oneof:"assistantProvider"`
}

func (x *GetAllAssistantProviderResponse_AssistantProvider) Reset() {
	*x = GetAllAssistantProviderResponse_AssistantProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_provider_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantProviderResponse_AssistantProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantProviderResponse_AssistantProvider) ProtoMessage() {}

func (x *GetAllAssistantProviderResponse_AssistantProvider) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_provider_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantProviderResponse_AssistantProvider.ProtoReflect.Descriptor instead.
func (*GetAllAssistantProviderResponse_AssistantProvider) Descriptor() ([]byte, []int) {
	return file_assistant_provider_proto_rawDescGZIP(), []int{7, 0}
}

func (m *GetAllAssistantProviderResponse_AssistantProvider) GetAssistantProvider() isGetAllAssistantProviderResponse_AssistantProvider_AssistantProvider {
	if m != nil {
		return m.AssistantProvider
	}
	return nil
}

func (x *GetAllAssistantProviderResponse_AssistantProvider) GetAssistantProviderModel() *AssistantProviderModel {
	if x, ok := x.GetAssistantProvider().(*GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderModel); ok {
		return x.AssistantProviderModel
	}
	return nil
}

func (x *GetAllAssistantProviderResponse_AssistantProvider) GetAssistantProviderAgentkit() *AssistantProviderAgentkit {
	if x, ok := x.GetAssistantProvider().(*GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderAgentkit); ok {
		return x.AssistantProviderAgentkit
	}
	return nil
}

func (x *GetAllAssistantProviderResponse_AssistantProvider) GetAssistantProviderWebsocket() *AssistantProviderWebsocket {
	if x, ok := x.GetAssistantProvider().(*GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderWebsocket); ok {
		return x.AssistantProviderWebsocket
	}
	return nil
}

type isGetAllAssistantProviderResponse_AssistantProvider_AssistantProvider interface {
	isGetAllAssistantProviderResponse_AssistantProvider_AssistantProvider()
}

type GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderModel struct {
	AssistantProviderModel *AssistantProviderModel `protobuf:"bytes,50,opt,name=assistantProviderModel,proto3,oneof"`
}

type GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderAgentkit struct {
	AssistantProviderAgentkit *AssistantProviderAgentkit `protobuf:"bytes,51,opt,name=assistantProviderAgentkit,proto3,oneof"`
}

type GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderWebsocket struct {
	AssistantProviderWebsocket *AssistantProviderWebsocket `protobuf:"bytes,52,opt,name=assistantProviderWebsocket,proto3,oneof"`
}

func (*GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderModel) isGetAllAssistantProviderResponse_AssistantProvider_AssistantProvider() {
}

func (*GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderAgentkit) isGetAllAssistantProviderResponse_AssistantProvider_AssistantProvider() {
}

func (*GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderWebsocket) isGetAllAssistantProviderResponse_AssistantProvider_AssistantProvider() {
}

var File_assistant_provider_proto protoreflect.FileDescriptor

var file_assistant_provider_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x13, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x13, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x22, 0xb3, 0x0b, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x62, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x6b, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x6b, 0x69, 0x74, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x6b, 0x69, 0x74, 0x48, 0x00, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x6b, 0x69, 0x74,
	0x12, 0x6e, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x09, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x1a, 0xf0, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x15, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x15, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x9b, 0x02, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x6b, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x4b, 0x69, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x4b, 0x69, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x77, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x6b, 0x69, 0x74, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0xe1, 0x03, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x57, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x65,
	0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x75, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x9c, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x20, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x68, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x47, 0x0a, 0x19,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xe2, 0x04, 0x0a, 0x19, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x6b, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x52, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x6b, 0x69, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x20, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x27, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x27, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xd8, 0x05, 0x0a, 0x1a, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x50, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x59, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x27, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x27, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x1a,
	0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xec, 0x04, 0x0a, 0x16, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f,
	0x0a, 0x15, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x15, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x27, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x27, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3c, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x52, 0x09, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x73, 0x12, 0x24, 0x0a, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xaa, 0x03, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x5f, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x16, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x68, 0x0a, 0x19, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x6b, 0x69, 0x74, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x6b, 0x69, 0x74, 0x48,
	0x00, 0x52, 0x19, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x6b, 0x69, 0x74, 0x12, 0x6b, 0x0a, 0x1a,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xd0, 0x04, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x54, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x52, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x1a,
	0xe0, 0x02, 0x0a, 0x11, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x5f, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x16,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x68, 0x0a, 0x19, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x6b, 0x69, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x6b, 0x69, 0x74, 0x48, 0x00, 0x52, 0x19, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x6b, 0x69, 0x74,
	0x12, 0x6b, 0x0a, 0x1a, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x34,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x00, 0x52, 0x1a, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x13, 0x0a,
	0x11, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x65, 0x78, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x77, 0x65, 0x62, 0x2d, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6c, 0x65, 0x78, 0x61,
	0x74, 0x69, 0x63, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_assistant_provider_proto_rawDescOnce sync.Once
	file_assistant_provider_proto_rawDescData = file_assistant_provider_proto_rawDesc
)

func file_assistant_provider_proto_rawDescGZIP() []byte {
	file_assistant_provider_proto_rawDescOnce.Do(func() {
		file_assistant_provider_proto_rawDescData = protoimpl.X.CompressGZIP(file_assistant_provider_proto_rawDescData)
	})
	return file_assistant_provider_proto_rawDescData
}

var file_assistant_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_assistant_provider_proto_goTypes = []any{
	(*UpdateAssistantVersionRequest)(nil),                                   // 0: assistant_api.UpdateAssistantVersionRequest
	(*CreateAssistantProviderRequest)(nil),                                  // 1: assistant_api.CreateAssistantProviderRequest
	(*AssistantProviderAgentkit)(nil),                                       // 2: assistant_api.AssistantProviderAgentkit
	(*AssistantProviderWebsocket)(nil),                                      // 3: assistant_api.AssistantProviderWebsocket
	(*AssistantProviderModel)(nil),                                          // 4: assistant_api.AssistantProviderModel
	(*GetAllAssistantProviderRequest)(nil),                                  // 5: assistant_api.GetAllAssistantProviderRequest
	(*GetAssistantProviderResponse)(nil),                                    // 6: assistant_api.GetAssistantProviderResponse
	(*GetAllAssistantProviderResponse)(nil),                                 // 7: assistant_api.GetAllAssistantProviderResponse
	(*CreateAssistantProviderRequest_CreateAssistantProviderModel)(nil),     // 8: assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderModel
	(*CreateAssistantProviderRequest_CreateAssistantProviderAgentkit)(nil),  // 9: assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderAgentkit
	(*CreateAssistantProviderRequest_CreateAssistantProviderWebsocket)(nil), // 10: assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderWebsocket
	nil, // 11: assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderAgentkit.MetadataEntry
	nil, // 12: assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderWebsocket.HeadersEntry
	nil, // 13: assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderWebsocket.ConnectionParametersEntry
	nil, // 14: assistant_api.AssistantProviderAgentkit.MetadataEntry
	nil, // 15: assistant_api.AssistantProviderWebsocket.HeadersEntry
	nil, // 16: assistant_api.AssistantProviderWebsocket.ParametersEntry
	(*GetAllAssistantProviderResponse_AssistantProvider)(nil), // 17: assistant_api.GetAllAssistantProviderResponse.AssistantProvider
	(*User)(nil),                   // 18: User
	(*timestamppb.Timestamp)(nil),  // 19: google.protobuf.Timestamp
	(*TextChatCompletePrompt)(nil), // 20: TextChatCompletePrompt
	(*Metadata)(nil),               // 21: Metadata
	(*Paginate)(nil),               // 22: Paginate
	(*Criteria)(nil),               // 23: Criteria
	(*Error)(nil),                  // 24: Error
	(*Paginated)(nil),              // 25: Paginated
}
var file_assistant_provider_proto_depIdxs = []int32{
	8,  // 0: assistant_api.CreateAssistantProviderRequest.model:type_name -> assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderModel
	9,  // 1: assistant_api.CreateAssistantProviderRequest.agentkit:type_name -> assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderAgentkit
	10, // 2: assistant_api.CreateAssistantProviderRequest.websocket:type_name -> assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderWebsocket
	14, // 3: assistant_api.AssistantProviderAgentkit.metadata:type_name -> assistant_api.AssistantProviderAgentkit.MetadataEntry
	18, // 4: assistant_api.AssistantProviderAgentkit.createdUser:type_name -> User
	18, // 5: assistant_api.AssistantProviderAgentkit.updatedUser:type_name -> User
	19, // 6: assistant_api.AssistantProviderAgentkit.createdDate:type_name -> google.protobuf.Timestamp
	19, // 7: assistant_api.AssistantProviderAgentkit.updatedDate:type_name -> google.protobuf.Timestamp
	15, // 8: assistant_api.AssistantProviderWebsocket.headers:type_name -> assistant_api.AssistantProviderWebsocket.HeadersEntry
	16, // 9: assistant_api.AssistantProviderWebsocket.parameters:type_name -> assistant_api.AssistantProviderWebsocket.ParametersEntry
	18, // 10: assistant_api.AssistantProviderWebsocket.createdUser:type_name -> User
	18, // 11: assistant_api.AssistantProviderWebsocket.updatedUser:type_name -> User
	19, // 12: assistant_api.AssistantProviderWebsocket.createdDate:type_name -> google.protobuf.Timestamp
	19, // 13: assistant_api.AssistantProviderWebsocket.updatedDate:type_name -> google.protobuf.Timestamp
	20, // 14: assistant_api.AssistantProviderModel.template:type_name -> TextChatCompletePrompt
	21, // 15: assistant_api.AssistantProviderModel.assistantModelOptions:type_name -> Metadata
	18, // 16: assistant_api.AssistantProviderModel.createdUser:type_name -> User
	18, // 17: assistant_api.AssistantProviderModel.updatedUser:type_name -> User
	19, // 18: assistant_api.AssistantProviderModel.createdDate:type_name -> google.protobuf.Timestamp
	19, // 19: assistant_api.AssistantProviderModel.updatedDate:type_name -> google.protobuf.Timestamp
	22, // 20: assistant_api.GetAllAssistantProviderRequest.paginate:type_name -> Paginate
	23, // 21: assistant_api.GetAllAssistantProviderRequest.criterias:type_name -> Criteria
	4,  // 22: assistant_api.GetAssistantProviderResponse.assistantProviderModel:type_name -> assistant_api.AssistantProviderModel
	2,  // 23: assistant_api.GetAssistantProviderResponse.assistantProviderAgentkit:type_name -> assistant_api.AssistantProviderAgentkit
	3,  // 24: assistant_api.GetAssistantProviderResponse.assistantProviderWebsocket:type_name -> assistant_api.AssistantProviderWebsocket
	24, // 25: assistant_api.GetAssistantProviderResponse.error:type_name -> Error
	17, // 26: assistant_api.GetAllAssistantProviderResponse.data:type_name -> assistant_api.GetAllAssistantProviderResponse.AssistantProvider
	24, // 27: assistant_api.GetAllAssistantProviderResponse.error:type_name -> Error
	25, // 28: assistant_api.GetAllAssistantProviderResponse.paginated:type_name -> Paginated
	20, // 29: assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderModel.template:type_name -> TextChatCompletePrompt
	21, // 30: assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderModel.assistantModelOptions:type_name -> Metadata
	11, // 31: assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderAgentkit.metadata:type_name -> assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderAgentkit.MetadataEntry
	12, // 32: assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderWebsocket.headers:type_name -> assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderWebsocket.HeadersEntry
	13, // 33: assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderWebsocket.connectionParameters:type_name -> assistant_api.CreateAssistantProviderRequest.CreateAssistantProviderWebsocket.ConnectionParametersEntry
	4,  // 34: assistant_api.GetAllAssistantProviderResponse.AssistantProvider.assistantProviderModel:type_name -> assistant_api.AssistantProviderModel
	2,  // 35: assistant_api.GetAllAssistantProviderResponse.AssistantProvider.assistantProviderAgentkit:type_name -> assistant_api.AssistantProviderAgentkit
	3,  // 36: assistant_api.GetAllAssistantProviderResponse.AssistantProvider.assistantProviderWebsocket:type_name -> assistant_api.AssistantProviderWebsocket
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_assistant_provider_proto_init() }
func file_assistant_provider_proto_init() {
	if File_assistant_provider_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_assistant_provider_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAssistantVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_provider_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAssistantProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_provider_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantProviderAgentkit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_provider_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantProviderWebsocket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_provider_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantProviderModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_provider_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_provider_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetAssistantProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_provider_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_provider_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAssistantProviderRequest_CreateAssistantProviderModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_provider_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAssistantProviderRequest_CreateAssistantProviderAgentkit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_provider_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAssistantProviderRequest_CreateAssistantProviderWebsocket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_provider_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantProviderResponse_AssistantProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_assistant_provider_proto_msgTypes[1].OneofWrappers = []any{
		(*CreateAssistantProviderRequest_Model)(nil),
		(*CreateAssistantProviderRequest_Agentkit)(nil),
		(*CreateAssistantProviderRequest_Websocket)(nil),
	}
	file_assistant_provider_proto_msgTypes[6].OneofWrappers = []any{
		(*GetAssistantProviderResponse_AssistantProviderModel)(nil),
		(*GetAssistantProviderResponse_AssistantProviderAgentkit)(nil),
		(*GetAssistantProviderResponse_AssistantProviderWebsocket)(nil),
	}
	file_assistant_provider_proto_msgTypes[17].OneofWrappers = []any{
		(*GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderModel)(nil),
		(*GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderAgentkit)(nil),
		(*GetAllAssistantProviderResponse_AssistantProvider_AssistantProviderWebsocket)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_assistant_provider_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_assistant_provider_proto_goTypes,
		DependencyIndexes: file_assistant_provider_proto_depIdxs,
		MessageInfos:      file_assistant_provider_proto_msgTypes,
	}.Build()
	File_assistant_provider_proto = out.File
	file_assistant_provider_proto_rawDesc = nil
	file_assistant_provider_proto_goTypes = nil
	file_assistant_provider_proto_depIdxs = nil
}
