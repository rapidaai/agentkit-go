// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: vault-api.proto

package lexatic_backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VaultCredential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value        *structpb.Struct       `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Status       string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	VaultLevel   string                 `protobuf:"bytes,5,opt,name=vaultLevel,proto3" json:"vaultLevel,omitempty"`
	VaultLevelId uint64                 `protobuf:"varint,6,opt,name=vaultLevelId,proto3" json:"vaultLevelId,omitempty"`
	VaultType    string                 `protobuf:"bytes,7,opt,name=vaultType,proto3" json:"vaultType,omitempty"`
	VaultTypeId  uint64                 `protobuf:"varint,8,opt,name=vaultTypeId,proto3" json:"vaultTypeId,omitempty"`
	CreatedDate  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	UpdatedDate  *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updatedDate,proto3" json:"updatedDate,omitempty"`
	LastUsedDate *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=lastUsedDate,proto3" json:"lastUsedDate,omitempty"`
}

func (x *VaultCredential) Reset() {
	*x = VaultCredential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vault_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultCredential) ProtoMessage() {}

func (x *VaultCredential) ProtoReflect() protoreflect.Message {
	mi := &file_vault_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultCredential.ProtoReflect.Descriptor instead.
func (*VaultCredential) Descriptor() ([]byte, []int) {
	return file_vault_api_proto_rawDescGZIP(), []int{0}
}

func (x *VaultCredential) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VaultCredential) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VaultCredential) GetValue() *structpb.Struct {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *VaultCredential) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VaultCredential) GetVaultLevel() string {
	if x != nil {
		return x.VaultLevel
	}
	return ""
}

func (x *VaultCredential) GetVaultLevelId() uint64 {
	if x != nil {
		return x.VaultLevelId
	}
	return 0
}

func (x *VaultCredential) GetVaultType() string {
	if x != nil {
		return x.VaultType
	}
	return ""
}

func (x *VaultCredential) GetVaultTypeId() uint64 {
	if x != nil {
		return x.VaultTypeId
	}
	return 0
}

func (x *VaultCredential) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *VaultCredential) GetUpdatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDate
	}
	return nil
}

func (x *VaultCredential) GetLastUsedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsedDate
	}
	return nil
}

type CreateProviderCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderId   uint64           `protobuf:"varint,1,opt,name=providerId,proto3" json:"providerId,omitempty"`
	Credential   *structpb.Struct `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	Name         string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ProviderName string           `protobuf:"bytes,4,opt,name=providerName,proto3" json:"providerName,omitempty"`
}

func (x *CreateProviderCredentialRequest) Reset() {
	*x = CreateProviderCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vault_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProviderCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProviderCredentialRequest) ProtoMessage() {}

func (x *CreateProviderCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vault_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProviderCredentialRequest.ProtoReflect.Descriptor instead.
func (*CreateProviderCredentialRequest) Descriptor() ([]byte, []int) {
	return file_vault_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProviderCredentialRequest) GetProviderId() uint64 {
	if x != nil {
		return x.ProviderId
	}
	return 0
}

func (x *CreateProviderCredentialRequest) GetCredential() *structpb.Struct {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *CreateProviderCredentialRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProviderCredentialRequest) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

type CreateToolCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToolId     uint64           `protobuf:"varint,1,opt,name=toolId,proto3" json:"toolId,omitempty"`
	Credential *structpb.Struct `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	Name       string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ToolName   string           `protobuf:"bytes,4,opt,name=toolName,proto3" json:"toolName,omitempty"`
}

func (x *CreateToolCredentialRequest) Reset() {
	*x = CreateToolCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vault_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateToolCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateToolCredentialRequest) ProtoMessage() {}

func (x *CreateToolCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vault_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateToolCredentialRequest.ProtoReflect.Descriptor instead.
func (*CreateToolCredentialRequest) Descriptor() ([]byte, []int) {
	return file_vault_api_proto_rawDescGZIP(), []int{2}
}

func (x *CreateToolCredentialRequest) GetToolId() uint64 {
	if x != nil {
		return x.ToolId
	}
	return 0
}

func (x *CreateToolCredentialRequest) GetCredential() *structpb.Struct {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *CreateToolCredentialRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateToolCredentialRequest) GetToolName() string {
	if x != nil {
		return x.ToolName
	}
	return ""
}

type DeleteCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaultId uint64 `protobuf:"varint,1,opt,name=vaultId,proto3" json:"vaultId,omitempty"`
}

func (x *DeleteCredentialRequest) Reset() {
	*x = DeleteCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vault_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCredentialRequest) ProtoMessage() {}

func (x *DeleteCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vault_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCredentialRequest.ProtoReflect.Descriptor instead.
func (*DeleteCredentialRequest) Descriptor() ([]byte, []int) {
	return file_vault_api_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCredentialRequest) GetVaultId() uint64 {
	if x != nil {
		return x.VaultId
	}
	return 0
}

type GetAllOrganizationCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paginate  *Paginate   `protobuf:"bytes,1,opt,name=paginate,proto3" json:"paginate,omitempty"`
	Criterias []*Criteria `protobuf:"bytes,2,rep,name=criterias,proto3" json:"criterias,omitempty"`
}

func (x *GetAllOrganizationCredentialRequest) Reset() {
	*x = GetAllOrganizationCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vault_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllOrganizationCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllOrganizationCredentialRequest) ProtoMessage() {}

func (x *GetAllOrganizationCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vault_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllOrganizationCredentialRequest.ProtoReflect.Descriptor instead.
func (*GetAllOrganizationCredentialRequest) Descriptor() ([]byte, []int) {
	return file_vault_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllOrganizationCredentialRequest) GetPaginate() *Paginate {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *GetAllOrganizationCredentialRequest) GetCriterias() []*Criteria {
	if x != nil {
		return x.Criterias
	}
	return nil
}

type GetAllOrganizationCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success   bool               `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data      []*VaultCredential `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error     *Error             `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Paginated *Paginated         `protobuf:"bytes,5,opt,name=paginated,proto3" json:"paginated,omitempty"`
}

func (x *GetAllOrganizationCredentialResponse) Reset() {
	*x = GetAllOrganizationCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vault_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllOrganizationCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllOrganizationCredentialResponse) ProtoMessage() {}

func (x *GetAllOrganizationCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vault_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllOrganizationCredentialResponse.ProtoReflect.Descriptor instead.
func (*GetAllOrganizationCredentialResponse) Descriptor() ([]byte, []int) {
	return file_vault_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllOrganizationCredentialResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllOrganizationCredentialResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAllOrganizationCredentialResponse) GetData() []*VaultCredential {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAllOrganizationCredentialResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAllOrganizationCredentialResponse) GetPaginated() *Paginated {
	if x != nil {
		return x.Paginated
	}
	return nil
}

type GetProviderCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderId     uint64 `protobuf:"varint,3,opt,name=providerId,proto3" json:"providerId,omitempty"`
	OrganizationId uint64 `protobuf:"varint,4,opt,name=organizationId,proto3" json:"organizationId,omitempty"`
}

func (x *GetProviderCredentialRequest) Reset() {
	*x = GetProviderCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vault_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderCredentialRequest) ProtoMessage() {}

func (x *GetProviderCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vault_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderCredentialRequest.ProtoReflect.Descriptor instead.
func (*GetProviderCredentialRequest) Descriptor() ([]byte, []int) {
	return file_vault_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetProviderCredentialRequest) GetProviderId() uint64 {
	if x != nil {
		return x.ProviderId
	}
	return 0
}

func (x *GetProviderCredentialRequest) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

type GetCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success bool             `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data    *VaultCredential `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   *Error           `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetCredentialResponse) Reset() {
	*x = GetCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vault_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialResponse) ProtoMessage() {}

func (x *GetCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vault_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialResponse) Descriptor() ([]byte, []int) {
	return file_vault_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetCredentialResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCredentialResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetCredentialResponse) GetData() *VaultCredential {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetCredentialResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaultId uint64 `protobuf:"varint,1,opt,name=vaultId,proto3" json:"vaultId,omitempty"`
}

func (x *GetCredentialRequest) Reset() {
	*x = GetCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vault_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialRequest) ProtoMessage() {}

func (x *GetCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vault_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialRequest) Descriptor() ([]byte, []int) {
	return file_vault_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetCredentialRequest) GetVaultId() uint64 {
	if x != nil {
		return x.VaultId
	}
	return 0
}

var File_vault_api_proto protoreflect.FileDescriptor

var file_vault_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x03, 0x0a, 0x0f, 0x56, 0x61,
	0x75, 0x6c, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0c,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0c, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa2, 0x01,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x6f, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6f, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x37, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x63, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x09, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x22, 0x6e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x34, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x32, 0xc7, 0x05,
	0x0a, 0x0c, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2a, 0x2e, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x12, 0x26, 0x2e, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2e, 0x2e, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12,
	0x22, 0x2e, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x27,
	0x2e, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1f, 0x2e, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x12, 0x1f, 0x2e, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x78, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x77, 0x65,
	0x62, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x6c, 0x65, 0x78, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vault_api_proto_rawDescOnce sync.Once
	file_vault_api_proto_rawDescData = file_vault_api_proto_rawDesc
)

func file_vault_api_proto_rawDescGZIP() []byte {
	file_vault_api_proto_rawDescOnce.Do(func() {
		file_vault_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_vault_api_proto_rawDescData)
	})
	return file_vault_api_proto_rawDescData
}

var file_vault_api_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_vault_api_proto_goTypes = []any{
	(*VaultCredential)(nil),                      // 0: vault_api.VaultCredential
	(*CreateProviderCredentialRequest)(nil),      // 1: vault_api.CreateProviderCredentialRequest
	(*CreateToolCredentialRequest)(nil),          // 2: vault_api.CreateToolCredentialRequest
	(*DeleteCredentialRequest)(nil),              // 3: vault_api.DeleteCredentialRequest
	(*GetAllOrganizationCredentialRequest)(nil),  // 4: vault_api.GetAllOrganizationCredentialRequest
	(*GetAllOrganizationCredentialResponse)(nil), // 5: vault_api.GetAllOrganizationCredentialResponse
	(*GetProviderCredentialRequest)(nil),         // 6: vault_api.GetProviderCredentialRequest
	(*GetCredentialResponse)(nil),                // 7: vault_api.GetCredentialResponse
	(*GetCredentialRequest)(nil),                 // 8: vault_api.GetCredentialRequest
	(*structpb.Struct)(nil),                      // 9: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),                // 10: google.protobuf.Timestamp
	(*Paginate)(nil),                             // 11: Paginate
	(*Criteria)(nil),                             // 12: Criteria
	(*Error)(nil),                                // 13: Error
	(*Paginated)(nil),                            // 14: Paginated
}
var file_vault_api_proto_depIdxs = []int32{
	9,  // 0: vault_api.VaultCredential.value:type_name -> google.protobuf.Struct
	10, // 1: vault_api.VaultCredential.createdDate:type_name -> google.protobuf.Timestamp
	10, // 2: vault_api.VaultCredential.updatedDate:type_name -> google.protobuf.Timestamp
	10, // 3: vault_api.VaultCredential.lastUsedDate:type_name -> google.protobuf.Timestamp
	9,  // 4: vault_api.CreateProviderCredentialRequest.credential:type_name -> google.protobuf.Struct
	9,  // 5: vault_api.CreateToolCredentialRequest.credential:type_name -> google.protobuf.Struct
	11, // 6: vault_api.GetAllOrganizationCredentialRequest.paginate:type_name -> Paginate
	12, // 7: vault_api.GetAllOrganizationCredentialRequest.criterias:type_name -> Criteria
	0,  // 8: vault_api.GetAllOrganizationCredentialResponse.data:type_name -> vault_api.VaultCredential
	13, // 9: vault_api.GetAllOrganizationCredentialResponse.error:type_name -> Error
	14, // 10: vault_api.GetAllOrganizationCredentialResponse.paginated:type_name -> Paginated
	0,  // 11: vault_api.GetCredentialResponse.data:type_name -> vault_api.VaultCredential
	13, // 12: vault_api.GetCredentialResponse.error:type_name -> Error
	1,  // 13: vault_api.VaultService.CreateProviderCredential:input_type -> vault_api.CreateProviderCredentialRequest
	2,  // 14: vault_api.VaultService.CreateToolCredential:input_type -> vault_api.CreateToolCredentialRequest
	4,  // 15: vault_api.VaultService.GetAllOrganizationCredential:input_type -> vault_api.GetAllOrganizationCredentialRequest
	3,  // 16: vault_api.VaultService.DeleteCredential:input_type -> vault_api.DeleteCredentialRequest
	6,  // 17: vault_api.VaultService.GetProviderCredential:input_type -> vault_api.GetProviderCredentialRequest
	8,  // 18: vault_api.VaultService.GetCredential:input_type -> vault_api.GetCredentialRequest
	8,  // 19: vault_api.VaultService.GetOauth2Credential:input_type -> vault_api.GetCredentialRequest
	7,  // 20: vault_api.VaultService.CreateProviderCredential:output_type -> vault_api.GetCredentialResponse
	7,  // 21: vault_api.VaultService.CreateToolCredential:output_type -> vault_api.GetCredentialResponse
	5,  // 22: vault_api.VaultService.GetAllOrganizationCredential:output_type -> vault_api.GetAllOrganizationCredentialResponse
	7,  // 23: vault_api.VaultService.DeleteCredential:output_type -> vault_api.GetCredentialResponse
	7,  // 24: vault_api.VaultService.GetProviderCredential:output_type -> vault_api.GetCredentialResponse
	7,  // 25: vault_api.VaultService.GetCredential:output_type -> vault_api.GetCredentialResponse
	7,  // 26: vault_api.VaultService.GetOauth2Credential:output_type -> vault_api.GetCredentialResponse
	20, // [20:27] is the sub-list for method output_type
	13, // [13:20] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_vault_api_proto_init() }
func file_vault_api_proto_init() {
	if File_vault_api_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vault_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*VaultCredential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vault_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateProviderCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vault_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateToolCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vault_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vault_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllOrganizationCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vault_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllOrganizationCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vault_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetProviderCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vault_api_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vault_api_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vault_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vault_api_proto_goTypes,
		DependencyIndexes: file_vault_api_proto_depIdxs,
		MessageInfos:      file_vault_api_proto_msgTypes,
	}.Build()
	File_vault_api_proto = out.File
	file_vault_api_proto_rawDesc = nil
	file_vault_api_proto_goTypes = nil
	file_vault_api_proto_depIdxs = nil
}
