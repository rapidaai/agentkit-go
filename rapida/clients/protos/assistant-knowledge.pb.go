// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: assistant-knowledge.proto

package lexatic_backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssistantKnowledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                                uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	KnowledgeId                       uint64                 `protobuf:"varint,2,opt,name=knowledgeId,proto3" json:"knowledgeId,omitempty"`
	RerankerEnable                    bool                   `protobuf:"varint,3,opt,name=rerankerEnable,proto3" json:"rerankerEnable,omitempty"`
	TopK                              uint32                 `protobuf:"varint,6,opt,name=topK,proto3" json:"topK,omitempty"`
	ScoreThreshold                    float32                `protobuf:"fixed32,7,opt,name=scoreThreshold,proto3" json:"scoreThreshold,omitempty"`
	Knowledge                         *Knowledge             `protobuf:"bytes,8,opt,name=knowledge,proto3" json:"knowledge,omitempty"`
	RetrievalMethod                   string                 `protobuf:"bytes,9,opt,name=retrievalMethod,proto3" json:"retrievalMethod,omitempty"`
	RerankerModelProviderId           uint64                 `protobuf:"varint,10,opt,name=rerankerModelProviderId,proto3" json:"rerankerModelProviderId,omitempty"`
	RerankerModelProviderName         string                 `protobuf:"bytes,11,opt,name=rerankerModelProviderName,proto3" json:"rerankerModelProviderName,omitempty"`
	AssistantKnowledgeRerankerOptions []*Metadata            `protobuf:"bytes,12,rep,name=assistantKnowledgeRerankerOptions,proto3" json:"assistantKnowledgeRerankerOptions,omitempty"`
	CreatedDate                       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	UpdatedDate                       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updatedDate,proto3" json:"updatedDate,omitempty"`
	Status                            string                 `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AssistantKnowledge) Reset() {
	*x = AssistantKnowledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_knowledge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantKnowledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantKnowledge) ProtoMessage() {}

func (x *AssistantKnowledge) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_knowledge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantKnowledge.ProtoReflect.Descriptor instead.
func (*AssistantKnowledge) Descriptor() ([]byte, []int) {
	return file_assistant_knowledge_proto_rawDescGZIP(), []int{0}
}

func (x *AssistantKnowledge) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssistantKnowledge) GetKnowledgeId() uint64 {
	if x != nil {
		return x.KnowledgeId
	}
	return 0
}

func (x *AssistantKnowledge) GetRerankerEnable() bool {
	if x != nil {
		return x.RerankerEnable
	}
	return false
}

func (x *AssistantKnowledge) GetTopK() uint32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *AssistantKnowledge) GetScoreThreshold() float32 {
	if x != nil {
		return x.ScoreThreshold
	}
	return 0
}

func (x *AssistantKnowledge) GetKnowledge() *Knowledge {
	if x != nil {
		return x.Knowledge
	}
	return nil
}

func (x *AssistantKnowledge) GetRetrievalMethod() string {
	if x != nil {
		return x.RetrievalMethod
	}
	return ""
}

func (x *AssistantKnowledge) GetRerankerModelProviderId() uint64 {
	if x != nil {
		return x.RerankerModelProviderId
	}
	return 0
}

func (x *AssistantKnowledge) GetRerankerModelProviderName() string {
	if x != nil {
		return x.RerankerModelProviderName
	}
	return ""
}

func (x *AssistantKnowledge) GetAssistantKnowledgeRerankerOptions() []*Metadata {
	if x != nil {
		return x.AssistantKnowledgeRerankerOptions
	}
	return nil
}

func (x *AssistantKnowledge) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *AssistantKnowledge) GetUpdatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDate
	}
	return nil
}

func (x *AssistantKnowledge) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CreateAssistantKnowledgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnowledgeId                       uint64      `protobuf:"varint,1,opt,name=knowledgeId,proto3" json:"knowledgeId,omitempty"`
	AssistantId                       uint64      `protobuf:"varint,2,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	RerankerModelProviderId           uint64      `protobuf:"varint,3,opt,name=rerankerModelProviderId,proto3" json:"rerankerModelProviderId,omitempty"`
	RerankerModelProviderName         string      `protobuf:"bytes,4,opt,name=rerankerModelProviderName,proto3" json:"rerankerModelProviderName,omitempty"`
	AssistantKnowledgeRerankerOptions []*Metadata `protobuf:"bytes,5,rep,name=assistantKnowledgeRerankerOptions,proto3" json:"assistantKnowledgeRerankerOptions,omitempty"`
	TopK                              uint32      `protobuf:"varint,6,opt,name=topK,proto3" json:"topK,omitempty"`
	ScoreThreshold                    float32     `protobuf:"fixed32,7,opt,name=scoreThreshold,proto3" json:"scoreThreshold,omitempty"`
	RetrievalMethod                   string      `protobuf:"bytes,8,opt,name=retrievalMethod,proto3" json:"retrievalMethod,omitempty"`
	RerankerEnable                    bool        `protobuf:"varint,9,opt,name=rerankerEnable,proto3" json:"rerankerEnable,omitempty"`
}

func (x *CreateAssistantKnowledgeRequest) Reset() {
	*x = CreateAssistantKnowledgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_knowledge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssistantKnowledgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssistantKnowledgeRequest) ProtoMessage() {}

func (x *CreateAssistantKnowledgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_knowledge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssistantKnowledgeRequest.ProtoReflect.Descriptor instead.
func (*CreateAssistantKnowledgeRequest) Descriptor() ([]byte, []int) {
	return file_assistant_knowledge_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAssistantKnowledgeRequest) GetKnowledgeId() uint64 {
	if x != nil {
		return x.KnowledgeId
	}
	return 0
}

func (x *CreateAssistantKnowledgeRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *CreateAssistantKnowledgeRequest) GetRerankerModelProviderId() uint64 {
	if x != nil {
		return x.RerankerModelProviderId
	}
	return 0
}

func (x *CreateAssistantKnowledgeRequest) GetRerankerModelProviderName() string {
	if x != nil {
		return x.RerankerModelProviderName
	}
	return ""
}

func (x *CreateAssistantKnowledgeRequest) GetAssistantKnowledgeRerankerOptions() []*Metadata {
	if x != nil {
		return x.AssistantKnowledgeRerankerOptions
	}
	return nil
}

func (x *CreateAssistantKnowledgeRequest) GetTopK() uint32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *CreateAssistantKnowledgeRequest) GetScoreThreshold() float32 {
	if x != nil {
		return x.ScoreThreshold
	}
	return 0
}

func (x *CreateAssistantKnowledgeRequest) GetRetrievalMethod() string {
	if x != nil {
		return x.RetrievalMethod
	}
	return ""
}

func (x *CreateAssistantKnowledgeRequest) GetRerankerEnable() bool {
	if x != nil {
		return x.RerankerEnable
	}
	return false
}

type UpdateAssistantKnowledgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                                uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	KnowledgeId                       uint64      `protobuf:"varint,2,opt,name=knowledgeId,proto3" json:"knowledgeId,omitempty"`
	AssistantId                       uint64      `protobuf:"varint,3,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	RerankerModelProviderId           uint64      `protobuf:"varint,4,opt,name=rerankerModelProviderId,proto3" json:"rerankerModelProviderId,omitempty"`
	RerankerModelProviderName         string      `protobuf:"bytes,5,opt,name=rerankerModelProviderName,proto3" json:"rerankerModelProviderName,omitempty"`
	AssistantKnowledgeRerankerOptions []*Metadata `protobuf:"bytes,6,rep,name=assistantKnowledgeRerankerOptions,proto3" json:"assistantKnowledgeRerankerOptions,omitempty"`
	ScoreThreshold                    float32     `protobuf:"fixed32,7,opt,name=scoreThreshold,proto3" json:"scoreThreshold,omitempty"`
	TopK                              uint32      `protobuf:"varint,8,opt,name=topK,proto3" json:"topK,omitempty"`
	RetrievalMethod                   string      `protobuf:"bytes,9,opt,name=retrievalMethod,proto3" json:"retrievalMethod,omitempty"`
	RerankerEnable                    bool        `protobuf:"varint,10,opt,name=rerankerEnable,proto3" json:"rerankerEnable,omitempty"`
}

func (x *UpdateAssistantKnowledgeRequest) Reset() {
	*x = UpdateAssistantKnowledgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_knowledge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssistantKnowledgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssistantKnowledgeRequest) ProtoMessage() {}

func (x *UpdateAssistantKnowledgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_knowledge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssistantKnowledgeRequest.ProtoReflect.Descriptor instead.
func (*UpdateAssistantKnowledgeRequest) Descriptor() ([]byte, []int) {
	return file_assistant_knowledge_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAssistantKnowledgeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAssistantKnowledgeRequest) GetKnowledgeId() uint64 {
	if x != nil {
		return x.KnowledgeId
	}
	return 0
}

func (x *UpdateAssistantKnowledgeRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *UpdateAssistantKnowledgeRequest) GetRerankerModelProviderId() uint64 {
	if x != nil {
		return x.RerankerModelProviderId
	}
	return 0
}

func (x *UpdateAssistantKnowledgeRequest) GetRerankerModelProviderName() string {
	if x != nil {
		return x.RerankerModelProviderName
	}
	return ""
}

func (x *UpdateAssistantKnowledgeRequest) GetAssistantKnowledgeRerankerOptions() []*Metadata {
	if x != nil {
		return x.AssistantKnowledgeRerankerOptions
	}
	return nil
}

func (x *UpdateAssistantKnowledgeRequest) GetScoreThreshold() float32 {
	if x != nil {
		return x.ScoreThreshold
	}
	return 0
}

func (x *UpdateAssistantKnowledgeRequest) GetTopK() uint32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *UpdateAssistantKnowledgeRequest) GetRetrievalMethod() string {
	if x != nil {
		return x.RetrievalMethod
	}
	return ""
}

func (x *UpdateAssistantKnowledgeRequest) GetRerankerEnable() bool {
	if x != nil {
		return x.RerankerEnable
	}
	return false
}

type GetAssistantKnowledgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantId uint64 `protobuf:"varint,2,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
}

func (x *GetAssistantKnowledgeRequest) Reset() {
	*x = GetAssistantKnowledgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_knowledge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantKnowledgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantKnowledgeRequest) ProtoMessage() {}

func (x *GetAssistantKnowledgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_knowledge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantKnowledgeRequest.ProtoReflect.Descriptor instead.
func (*GetAssistantKnowledgeRequest) Descriptor() ([]byte, []int) {
	return file_assistant_knowledge_proto_rawDescGZIP(), []int{3}
}

func (x *GetAssistantKnowledgeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAssistantKnowledgeRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

type DeleteAssistantKnowledgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantId uint64 `protobuf:"varint,2,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
}

func (x *DeleteAssistantKnowledgeRequest) Reset() {
	*x = DeleteAssistantKnowledgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_knowledge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAssistantKnowledgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssistantKnowledgeRequest) ProtoMessage() {}

func (x *DeleteAssistantKnowledgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_knowledge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssistantKnowledgeRequest.ProtoReflect.Descriptor instead.
func (*DeleteAssistantKnowledgeRequest) Descriptor() ([]byte, []int) {
	return file_assistant_knowledge_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAssistantKnowledgeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteAssistantKnowledgeRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

type GetAssistantKnowledgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success bool                `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data    *AssistantKnowledge `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   *Error              `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetAssistantKnowledgeResponse) Reset() {
	*x = GetAssistantKnowledgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_knowledge_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantKnowledgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantKnowledgeResponse) ProtoMessage() {}

func (x *GetAssistantKnowledgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_knowledge_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantKnowledgeResponse.ProtoReflect.Descriptor instead.
func (*GetAssistantKnowledgeResponse) Descriptor() ([]byte, []int) {
	return file_assistant_knowledge_proto_rawDescGZIP(), []int{5}
}

func (x *GetAssistantKnowledgeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAssistantKnowledgeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAssistantKnowledgeResponse) GetData() *AssistantKnowledge {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAssistantKnowledgeResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetAllAssistantKnowledgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId uint64      `protobuf:"varint,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Paginate    *Paginate   `protobuf:"bytes,2,opt,name=paginate,proto3" json:"paginate,omitempty"`
	Criterias   []*Criteria `protobuf:"bytes,3,rep,name=criterias,proto3" json:"criterias,omitempty"`
}

func (x *GetAllAssistantKnowledgeRequest) Reset() {
	*x = GetAllAssistantKnowledgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_knowledge_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantKnowledgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantKnowledgeRequest) ProtoMessage() {}

func (x *GetAllAssistantKnowledgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_knowledge_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantKnowledgeRequest.ProtoReflect.Descriptor instead.
func (*GetAllAssistantKnowledgeRequest) Descriptor() ([]byte, []int) {
	return file_assistant_knowledge_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllAssistantKnowledgeRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *GetAllAssistantKnowledgeRequest) GetPaginate() *Paginate {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *GetAllAssistantKnowledgeRequest) GetCriterias() []*Criteria {
	if x != nil {
		return x.Criterias
	}
	return nil
}

type GetAllAssistantKnowledgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success   bool                  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data      []*AssistantKnowledge `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error     *Error                `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Paginated *Paginated            `protobuf:"bytes,5,opt,name=paginated,proto3" json:"paginated,omitempty"`
}

func (x *GetAllAssistantKnowledgeResponse) Reset() {
	*x = GetAllAssistantKnowledgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_knowledge_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantKnowledgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantKnowledgeResponse) ProtoMessage() {}

func (x *GetAllAssistantKnowledgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_knowledge_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantKnowledgeResponse.ProtoReflect.Descriptor instead.
func (*GetAllAssistantKnowledgeResponse) Descriptor() ([]byte, []int) {
	return file_assistant_knowledge_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllAssistantKnowledgeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllAssistantKnowledgeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAllAssistantKnowledgeResponse) GetData() []*AssistantKnowledge {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAllAssistantKnowledgeResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAllAssistantKnowledgeResponse) GetPaginated() *Paginated {
	if x != nil {
		return x.Paginated
	}
	return nil
}

var File_assistant_knowledge_proto protoreflect.FileDescriptor

var file_assistant_knowledge_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2d, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x04, 0x0a, 0x12, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65,
	0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x28,
	0x0a, 0x09, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x09, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x3c, 0x0a, 0x17, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x17, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x19, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x57,
	0x0a, 0x21, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x21, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd0, 0x03, 0x0a, 0x1f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x17, 0x72,
	0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x17, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65, 0x72,
	0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x72, 0x65,
	0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x21, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x72,
	0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x21, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x6f, 0x70, 0x4b, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xe4,
	0x03, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x3c, 0x0a, 0x17, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x17, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x19, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x57,
	0x0a, 0x21, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x21, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x6f, 0x70, 0x4b, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x58, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x5b, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x97, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x52, 0x09, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x35,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x42, 0x37, 0x5a,
	0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x78, 0x61,
	0x74, 0x69, 0x63, 0x2f, 0x77, 0x65, 0x62, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6c, 0x65, 0x78, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_assistant_knowledge_proto_rawDescOnce sync.Once
	file_assistant_knowledge_proto_rawDescData = file_assistant_knowledge_proto_rawDesc
)

func file_assistant_knowledge_proto_rawDescGZIP() []byte {
	file_assistant_knowledge_proto_rawDescOnce.Do(func() {
		file_assistant_knowledge_proto_rawDescData = protoimpl.X.CompressGZIP(file_assistant_knowledge_proto_rawDescData)
	})
	return file_assistant_knowledge_proto_rawDescData
}

var file_assistant_knowledge_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_assistant_knowledge_proto_goTypes = []any{
	(*AssistantKnowledge)(nil),               // 0: assistant_api.AssistantKnowledge
	(*CreateAssistantKnowledgeRequest)(nil),  // 1: assistant_api.CreateAssistantKnowledgeRequest
	(*UpdateAssistantKnowledgeRequest)(nil),  // 2: assistant_api.UpdateAssistantKnowledgeRequest
	(*GetAssistantKnowledgeRequest)(nil),     // 3: assistant_api.GetAssistantKnowledgeRequest
	(*DeleteAssistantKnowledgeRequest)(nil),  // 4: assistant_api.DeleteAssistantKnowledgeRequest
	(*GetAssistantKnowledgeResponse)(nil),    // 5: assistant_api.GetAssistantKnowledgeResponse
	(*GetAllAssistantKnowledgeRequest)(nil),  // 6: assistant_api.GetAllAssistantKnowledgeRequest
	(*GetAllAssistantKnowledgeResponse)(nil), // 7: assistant_api.GetAllAssistantKnowledgeResponse
	(*Knowledge)(nil),                        // 8: Knowledge
	(*Metadata)(nil),                         // 9: Metadata
	(*timestamppb.Timestamp)(nil),            // 10: google.protobuf.Timestamp
	(*Error)(nil),                            // 11: Error
	(*Paginate)(nil),                         // 12: Paginate
	(*Criteria)(nil),                         // 13: Criteria
	(*Paginated)(nil),                        // 14: Paginated
}
var file_assistant_knowledge_proto_depIdxs = []int32{
	8,  // 0: assistant_api.AssistantKnowledge.knowledge:type_name -> Knowledge
	9,  // 1: assistant_api.AssistantKnowledge.assistantKnowledgeRerankerOptions:type_name -> Metadata
	10, // 2: assistant_api.AssistantKnowledge.createdDate:type_name -> google.protobuf.Timestamp
	10, // 3: assistant_api.AssistantKnowledge.updatedDate:type_name -> google.protobuf.Timestamp
	9,  // 4: assistant_api.CreateAssistantKnowledgeRequest.assistantKnowledgeRerankerOptions:type_name -> Metadata
	9,  // 5: assistant_api.UpdateAssistantKnowledgeRequest.assistantKnowledgeRerankerOptions:type_name -> Metadata
	0,  // 6: assistant_api.GetAssistantKnowledgeResponse.data:type_name -> assistant_api.AssistantKnowledge
	11, // 7: assistant_api.GetAssistantKnowledgeResponse.error:type_name -> Error
	12, // 8: assistant_api.GetAllAssistantKnowledgeRequest.paginate:type_name -> Paginate
	13, // 9: assistant_api.GetAllAssistantKnowledgeRequest.criterias:type_name -> Criteria
	0,  // 10: assistant_api.GetAllAssistantKnowledgeResponse.data:type_name -> assistant_api.AssistantKnowledge
	11, // 11: assistant_api.GetAllAssistantKnowledgeResponse.error:type_name -> Error
	14, // 12: assistant_api.GetAllAssistantKnowledgeResponse.paginated:type_name -> Paginated
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_assistant_knowledge_proto_init() }
func file_assistant_knowledge_proto_init() {
	if File_assistant_knowledge_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_assistant_knowledge_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantKnowledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_knowledge_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAssistantKnowledgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_knowledge_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAssistantKnowledgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_knowledge_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetAssistantKnowledgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_knowledge_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAssistantKnowledgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_knowledge_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetAssistantKnowledgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_knowledge_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantKnowledgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_knowledge_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantKnowledgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_assistant_knowledge_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_assistant_knowledge_proto_goTypes,
		DependencyIndexes: file_assistant_knowledge_proto_depIdxs,
		MessageInfos:      file_assistant_knowledge_proto_msgTypes,
	}.Build()
	File_assistant_knowledge_proto = out.File
	file_assistant_knowledge_proto_rawDesc = nil
	file_assistant_knowledge_proto_goTypes = nil
	file_assistant_knowledge_proto_depIdxs = nil
}
