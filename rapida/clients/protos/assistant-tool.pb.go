// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: assistant-tool.proto

package lexatic_backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssistantTool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantId      uint64                 `protobuf:"varint,2,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Name             string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Fields           *structpb.Struct       `protobuf:"bytes,5,opt,name=fields,proto3" json:"fields,omitempty"`
	ExecutionMethod  string                 `protobuf:"bytes,6,opt,name=executionMethod,proto3" json:"executionMethod,omitempty"`
	ExecutionOptions []*Metadata            `protobuf:"bytes,7,rep,name=executionOptions,proto3" json:"executionOptions,omitempty"`
	Status           string                 `protobuf:"bytes,25,opt,name=status,proto3" json:"status,omitempty"`
	CreatedDate      *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	UpdatedDate      *timestamppb.Timestamp `protobuf:"bytes,27,opt,name=updatedDate,proto3" json:"updatedDate,omitempty"`
}

func (x *AssistantTool) Reset() {
	*x = AssistantTool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantTool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantTool) ProtoMessage() {}

func (x *AssistantTool) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantTool.ProtoReflect.Descriptor instead.
func (*AssistantTool) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{0}
}

func (x *AssistantTool) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssistantTool) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *AssistantTool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssistantTool) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AssistantTool) GetFields() *structpb.Struct {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *AssistantTool) GetExecutionMethod() string {
	if x != nil {
		return x.ExecutionMethod
	}
	return ""
}

func (x *AssistantTool) GetExecutionOptions() []*Metadata {
	if x != nil {
		return x.ExecutionOptions
	}
	return nil
}

func (x *AssistantTool) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AssistantTool) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *AssistantTool) GetUpdatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDate
	}
	return nil
}

type CreateAssistantToolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId      uint64           `protobuf:"varint,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Name             string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description      string           `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Fields           *structpb.Struct `protobuf:"bytes,5,opt,name=fields,proto3" json:"fields,omitempty"`
	ExecutionMethod  string           `protobuf:"bytes,6,opt,name=executionMethod,proto3" json:"executionMethod,omitempty"`
	ExecutionOptions []*Metadata      `protobuf:"bytes,7,rep,name=executionOptions,proto3" json:"executionOptions,omitempty"`
}

func (x *CreateAssistantToolRequest) Reset() {
	*x = CreateAssistantToolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssistantToolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssistantToolRequest) ProtoMessage() {}

func (x *CreateAssistantToolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssistantToolRequest.ProtoReflect.Descriptor instead.
func (*CreateAssistantToolRequest) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAssistantToolRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *CreateAssistantToolRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAssistantToolRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAssistantToolRequest) GetFields() *structpb.Struct {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *CreateAssistantToolRequest) GetExecutionMethod() string {
	if x != nil {
		return x.ExecutionMethod
	}
	return ""
}

func (x *CreateAssistantToolRequest) GetExecutionOptions() []*Metadata {
	if x != nil {
		return x.ExecutionOptions
	}
	return nil
}

type UpdateAssistantToolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantId      uint64           `protobuf:"varint,2,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Name             string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description      string           `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Fields           *structpb.Struct `protobuf:"bytes,5,opt,name=fields,proto3" json:"fields,omitempty"`
	ExecutionMethod  string           `protobuf:"bytes,6,opt,name=executionMethod,proto3" json:"executionMethod,omitempty"`
	ExecutionOptions []*Metadata      `protobuf:"bytes,7,rep,name=executionOptions,proto3" json:"executionOptions,omitempty"`
}

func (x *UpdateAssistantToolRequest) Reset() {
	*x = UpdateAssistantToolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssistantToolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssistantToolRequest) ProtoMessage() {}

func (x *UpdateAssistantToolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssistantToolRequest.ProtoReflect.Descriptor instead.
func (*UpdateAssistantToolRequest) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAssistantToolRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAssistantToolRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *UpdateAssistantToolRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAssistantToolRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAssistantToolRequest) GetFields() *structpb.Struct {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UpdateAssistantToolRequest) GetExecutionMethod() string {
	if x != nil {
		return x.ExecutionMethod
	}
	return ""
}

func (x *UpdateAssistantToolRequest) GetExecutionOptions() []*Metadata {
	if x != nil {
		return x.ExecutionOptions
	}
	return nil
}

type GetAssistantToolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantId uint64 `protobuf:"varint,2,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
}

func (x *GetAssistantToolRequest) Reset() {
	*x = GetAssistantToolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantToolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantToolRequest) ProtoMessage() {}

func (x *GetAssistantToolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantToolRequest.ProtoReflect.Descriptor instead.
func (*GetAssistantToolRequest) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{3}
}

func (x *GetAssistantToolRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAssistantToolRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

type DeleteAssistantToolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssistantId uint64 `protobuf:"varint,2,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
}

func (x *DeleteAssistantToolRequest) Reset() {
	*x = DeleteAssistantToolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAssistantToolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssistantToolRequest) ProtoMessage() {}

func (x *DeleteAssistantToolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssistantToolRequest.ProtoReflect.Descriptor instead.
func (*DeleteAssistantToolRequest) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAssistantToolRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteAssistantToolRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

type GetAssistantToolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success bool           `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data    *AssistantTool `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   *Error         `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetAssistantToolResponse) Reset() {
	*x = GetAssistantToolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantToolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantToolResponse) ProtoMessage() {}

func (x *GetAssistantToolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantToolResponse.ProtoReflect.Descriptor instead.
func (*GetAssistantToolResponse) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{5}
}

func (x *GetAssistantToolResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAssistantToolResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAssistantToolResponse) GetData() *AssistantTool {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAssistantToolResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetAllAssistantToolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId uint64      `protobuf:"varint,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	Paginate    *Paginate   `protobuf:"bytes,2,opt,name=paginate,proto3" json:"paginate,omitempty"`
	Criterias   []*Criteria `protobuf:"bytes,3,rep,name=criterias,proto3" json:"criterias,omitempty"`
}

func (x *GetAllAssistantToolRequest) Reset() {
	*x = GetAllAssistantToolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantToolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantToolRequest) ProtoMessage() {}

func (x *GetAllAssistantToolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantToolRequest.ProtoReflect.Descriptor instead.
func (*GetAllAssistantToolRequest) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllAssistantToolRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *GetAllAssistantToolRequest) GetPaginate() *Paginate {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *GetAllAssistantToolRequest) GetCriterias() []*Criteria {
	if x != nil {
		return x.Criterias
	}
	return nil
}

type GetAllAssistantToolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success   bool             `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data      []*AssistantTool `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error     *Error           `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Paginated *Paginated       `protobuf:"bytes,5,opt,name=paginated,proto3" json:"paginated,omitempty"`
}

func (x *GetAllAssistantToolResponse) Reset() {
	*x = GetAllAssistantToolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantToolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantToolResponse) ProtoMessage() {}

func (x *GetAllAssistantToolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantToolResponse.ProtoReflect.Descriptor instead.
func (*GetAllAssistantToolResponse) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllAssistantToolResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllAssistantToolResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAllAssistantToolResponse) GetData() []*AssistantTool {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAllAssistantToolResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAllAssistantToolResponse) GetPaginated() *Paginated {
	if x != nil {
		return x.Paginated
	}
	return nil
}

type GetAllAssistantToolLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64      `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Paginate  *Paginate   `protobuf:"bytes,3,opt,name=paginate,proto3" json:"paginate,omitempty"`
	Criterias []*Criteria `protobuf:"bytes,4,rep,name=criterias,proto3" json:"criterias,omitempty"`
	Order     *Ordering   `protobuf:"bytes,5,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *GetAllAssistantToolLogRequest) Reset() {
	*x = GetAllAssistantToolLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantToolLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantToolLogRequest) ProtoMessage() {}

func (x *GetAllAssistantToolLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantToolLogRequest.ProtoReflect.Descriptor instead.
func (*GetAllAssistantToolLogRequest) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllAssistantToolLogRequest) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetAllAssistantToolLogRequest) GetPaginate() *Paginate {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *GetAllAssistantToolLogRequest) GetCriterias() []*Criteria {
	if x != nil {
		return x.Criterias
	}
	return nil
}

func (x *GetAllAssistantToolLogRequest) GetOrder() *Ordering {
	if x != nil {
		return x.Order
	}
	return nil
}

type GetAssistantToolLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Id        uint64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAssistantToolLogRequest) Reset() {
	*x = GetAssistantToolLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantToolLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantToolLogRequest) ProtoMessage() {}

func (x *GetAssistantToolLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantToolLogRequest.ProtoReflect.Descriptor instead.
func (*GetAssistantToolLogRequest) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{9}
}

func (x *GetAssistantToolLogRequest) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetAssistantToolLogRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAssistantToolLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success bool              `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data    *AssistantToolLog `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   *Error            `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetAssistantToolLogResponse) Reset() {
	*x = GetAssistantToolLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantToolLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantToolLogResponse) ProtoMessage() {}

func (x *GetAssistantToolLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantToolLogResponse.ProtoReflect.Descriptor instead.
func (*GetAssistantToolLogResponse) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{10}
}

func (x *GetAssistantToolLogResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAssistantToolLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAssistantToolLogResponse) GetData() *AssistantToolLog {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAssistantToolLogResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetAllAssistantToolLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success   bool                `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data      []*AssistantToolLog `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error     *Error              `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Paginated *Paginated          `protobuf:"bytes,5,opt,name=paginated,proto3" json:"paginated,omitempty"`
}

func (x *GetAllAssistantToolLogResponse) Reset() {
	*x = GetAllAssistantToolLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssistantToolLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssistantToolLogResponse) ProtoMessage() {}

func (x *GetAllAssistantToolLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssistantToolLogResponse.ProtoReflect.Descriptor instead.
func (*GetAllAssistantToolLogResponse) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{11}
}

func (x *GetAllAssistantToolLogResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllAssistantToolLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAllAssistantToolLogResponse) GetData() []*AssistantToolLog {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAllAssistantToolLogResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAllAssistantToolLogResponse) GetPaginated() *Paginated {
	if x != nil {
		return x.Paginated
	}
	return nil
}

type AssistantToolLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Action      *structpb.Struct       `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Request     *structpb.Struct       `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	Response    *structpb.Struct       `protobuf:"bytes,4,opt,name=response,proto3" json:"response,omitempty"`
	Status      string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedDate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	UpdatedDate *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedDate,proto3" json:"updatedDate,omitempty"`
	AssistantId                    uint64         `protobuf:"varint,8,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	ProjectId                      uint64         `protobuf:"varint,9,opt,name=projectId,proto3" json:"projectId,omitempty"`
	OrganizationId                 uint64         `protobuf:"varint,10,opt,name=organizationId,proto3" json:"organizationId,omitempty"`
	AssistantConversationId        uint64         `protobuf:"varint,11,opt,name=assistantConversationId,proto3" json:"assistantConversationId,omitempty"`
	AssistantConversationMessageId string         `protobuf:"bytes,12,opt,name=assistantConversationMessageId,proto3" json:"assistantConversationMessageId,omitempty"`
	AssetPrefix                    string         `protobuf:"bytes,14,opt,name=assetPrefix,proto3" json:"assetPrefix,omitempty"`
	ExecutionMethod                string         `protobuf:"bytes,15,opt,name=executionMethod,proto3" json:"executionMethod,omitempty"`
	TimeTaken                      uint64         `protobuf:"varint,16,opt,name=timeTaken,proto3" json:"timeTaken,omitempty"`
	AssistantToolId                uint64         `protobuf:"varint,13,opt,name=assistantToolId,proto3" json:"assistantToolId,omitempty"`
	AssistantToolName              string         `protobuf:"bytes,17,opt,name=assistantToolName,proto3" json:"assistantToolName,omitempty"`
	AssistantTool                  *AssistantTool `protobuf:"bytes,18,opt,name=assistantTool,proto3" json:"assistantTool,omitempty"`
}

func (x *AssistantToolLog) Reset() {
	*x = AssistantToolLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assistant_tool_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantToolLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantToolLog) ProtoMessage() {}

func (x *AssistantToolLog) ProtoReflect() protoreflect.Message {
	mi := &file_assistant_tool_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantToolLog.ProtoReflect.Descriptor instead.
func (*AssistantToolLog) Descriptor() ([]byte, []int) {
	return file_assistant_tool_proto_rawDescGZIP(), []int{12}
}

func (x *AssistantToolLog) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssistantToolLog) GetAction() *structpb.Struct {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *AssistantToolLog) GetRequest() *structpb.Struct {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *AssistantToolLog) GetResponse() *structpb.Struct {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *AssistantToolLog) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AssistantToolLog) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *AssistantToolLog) GetUpdatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDate
	}
	return nil
}

func (x *AssistantToolLog) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *AssistantToolLog) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AssistantToolLog) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *AssistantToolLog) GetAssistantConversationId() uint64 {
	if x != nil {
		return x.AssistantConversationId
	}
	return 0
}

func (x *AssistantToolLog) GetAssistantConversationMessageId() string {
	if x != nil {
		return x.AssistantConversationMessageId
	}
	return ""
}

func (x *AssistantToolLog) GetAssetPrefix() string {
	if x != nil {
		return x.AssetPrefix
	}
	return ""
}

func (x *AssistantToolLog) GetExecutionMethod() string {
	if x != nil {
		return x.ExecutionMethod
	}
	return ""
}

func (x *AssistantToolLog) GetTimeTaken() uint64 {
	if x != nil {
		return x.TimeTaken
	}
	return 0
}

func (x *AssistantToolLog) GetAssistantToolId() uint64 {
	if x != nil {
		return x.AssistantToolId
	}
	return 0
}

func (x *AssistantToolLog) GetAssistantToolName() string {
	if x != nil {
		return x.AssistantToolName
	}
	return ""
}

func (x *AssistantToolLog) GetAssistantTool() *AssistantTool {
	if x != nil {
		return x.AssistantTool
	}
	return nil
}

var File_assistant_tool_proto protoreflect.FileDescriptor

var file_assistant_tool_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2d, 0x74, 0x6f, 0x6f, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa5, 0x03, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x35, 0x0a, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x35, 0x0a, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9e, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x35, 0x0a, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x53, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x56, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x92, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x09,
	0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x09, 0x63, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x22, 0xb2, 0x01,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x63, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x09, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x73, 0x12, 0x1f, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0x52, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c,
	0x4c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xcb, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x54, 0x6f, 0x6f, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x09, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x22, 0xdb, 0x06, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x4c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x31, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x3c, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x3c, 0x0a, 0x17, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x17, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x46, 0x0a,
	0x1e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x20, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x61,
	0x6b, 0x65, 0x6e, 0x12, 0x2c, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x54, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f,
	0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x42, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54,
	0x6f, 0x6f, 0x6c, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6c, 0x65, 0x78, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x77, 0x65, 0x62, 0x2d, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6c, 0x65, 0x78,
	0x61, 0x74, 0x69, 0x63, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_assistant_tool_proto_rawDescOnce sync.Once
	file_assistant_tool_proto_rawDescData = file_assistant_tool_proto_rawDesc
)

func file_assistant_tool_proto_rawDescGZIP() []byte {
	file_assistant_tool_proto_rawDescOnce.Do(func() {
		file_assistant_tool_proto_rawDescData = protoimpl.X.CompressGZIP(file_assistant_tool_proto_rawDescData)
	})
	return file_assistant_tool_proto_rawDescData
}

var file_assistant_tool_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_assistant_tool_proto_goTypes = []any{
	(*AssistantTool)(nil),                  // 0: assistant_api.AssistantTool
	(*CreateAssistantToolRequest)(nil),     // 1: assistant_api.CreateAssistantToolRequest
	(*UpdateAssistantToolRequest)(nil),     // 2: assistant_api.UpdateAssistantToolRequest
	(*GetAssistantToolRequest)(nil),        // 3: assistant_api.GetAssistantToolRequest
	(*DeleteAssistantToolRequest)(nil),     // 4: assistant_api.DeleteAssistantToolRequest
	(*GetAssistantToolResponse)(nil),       // 5: assistant_api.GetAssistantToolResponse
	(*GetAllAssistantToolRequest)(nil),     // 6: assistant_api.GetAllAssistantToolRequest
	(*GetAllAssistantToolResponse)(nil),    // 7: assistant_api.GetAllAssistantToolResponse
	(*GetAllAssistantToolLogRequest)(nil),  // 8: assistant_api.GetAllAssistantToolLogRequest
	(*GetAssistantToolLogRequest)(nil),     // 9: assistant_api.GetAssistantToolLogRequest
	(*GetAssistantToolLogResponse)(nil),    // 10: assistant_api.GetAssistantToolLogResponse
	(*GetAllAssistantToolLogResponse)(nil), // 11: assistant_api.GetAllAssistantToolLogResponse
	(*AssistantToolLog)(nil),               // 12: assistant_api.AssistantToolLog
	(*structpb.Struct)(nil),                // 13: google.protobuf.Struct
	(*Metadata)(nil),                       // 14: Metadata
	(*timestamppb.Timestamp)(nil),          // 15: google.protobuf.Timestamp
	(*Error)(nil),                          // 16: Error
	(*Paginate)(nil),                       // 17: Paginate
	(*Criteria)(nil),                       // 18: Criteria
	(*Paginated)(nil),                      // 19: Paginated
	(*Ordering)(nil),                       // 20: Ordering
}
var file_assistant_tool_proto_depIdxs = []int32{
	13, // 0: assistant_api.AssistantTool.fields:type_name -> google.protobuf.Struct
	14, // 1: assistant_api.AssistantTool.executionOptions:type_name -> Metadata
	15, // 2: assistant_api.AssistantTool.createdDate:type_name -> google.protobuf.Timestamp
	15, // 3: assistant_api.AssistantTool.updatedDate:type_name -> google.protobuf.Timestamp
	13, // 4: assistant_api.CreateAssistantToolRequest.fields:type_name -> google.protobuf.Struct
	14, // 5: assistant_api.CreateAssistantToolRequest.executionOptions:type_name -> Metadata
	13, // 6: assistant_api.UpdateAssistantToolRequest.fields:type_name -> google.protobuf.Struct
	14, // 7: assistant_api.UpdateAssistantToolRequest.executionOptions:type_name -> Metadata
	0,  // 8: assistant_api.GetAssistantToolResponse.data:type_name -> assistant_api.AssistantTool
	16, // 9: assistant_api.GetAssistantToolResponse.error:type_name -> Error
	17, // 10: assistant_api.GetAllAssistantToolRequest.paginate:type_name -> Paginate
	18, // 11: assistant_api.GetAllAssistantToolRequest.criterias:type_name -> Criteria
	0,  // 12: assistant_api.GetAllAssistantToolResponse.data:type_name -> assistant_api.AssistantTool
	16, // 13: assistant_api.GetAllAssistantToolResponse.error:type_name -> Error
	19, // 14: assistant_api.GetAllAssistantToolResponse.paginated:type_name -> Paginated
	17, // 15: assistant_api.GetAllAssistantToolLogRequest.paginate:type_name -> Paginate
	18, // 16: assistant_api.GetAllAssistantToolLogRequest.criterias:type_name -> Criteria
	20, // 17: assistant_api.GetAllAssistantToolLogRequest.order:type_name -> Ordering
	12, // 18: assistant_api.GetAssistantToolLogResponse.data:type_name -> assistant_api.AssistantToolLog
	16, // 19: assistant_api.GetAssistantToolLogResponse.error:type_name -> Error
	12, // 20: assistant_api.GetAllAssistantToolLogResponse.data:type_name -> assistant_api.AssistantToolLog
	16, // 21: assistant_api.GetAllAssistantToolLogResponse.error:type_name -> Error
	19, // 22: assistant_api.GetAllAssistantToolLogResponse.paginated:type_name -> Paginated
	13, // 23: assistant_api.AssistantToolLog.action:type_name -> google.protobuf.Struct
	13, // 24: assistant_api.AssistantToolLog.request:type_name -> google.protobuf.Struct
	13, // 25: assistant_api.AssistantToolLog.response:type_name -> google.protobuf.Struct
	15, // 26: assistant_api.AssistantToolLog.createdDate:type_name -> google.protobuf.Timestamp
	15, // 27: assistant_api.AssistantToolLog.updatedDate:type_name -> google.protobuf.Timestamp
	0,  // 28: assistant_api.AssistantToolLog.assistantTool:type_name -> assistant_api.AssistantTool
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_assistant_tool_proto_init() }
func file_assistant_tool_proto_init() {
	if File_assistant_tool_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_assistant_tool_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantTool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_tool_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAssistantToolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_tool_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAssistantToolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_tool_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetAssistantToolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_tool_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAssistantToolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_tool_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetAssistantToolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_tool_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantToolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_tool_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantToolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_tool_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantToolLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_tool_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetAssistantToolLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_tool_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetAssistantToolLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_tool_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssistantToolLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assistant_tool_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantToolLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_assistant_tool_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_assistant_tool_proto_goTypes,
		DependencyIndexes: file_assistant_tool_proto_depIdxs,
		MessageInfos:      file_assistant_tool_proto_msgTypes,
	}.Build()
	File_assistant_tool_proto = out.File
	file_assistant_tool_proto_rawDesc = nil
	file_assistant_tool_proto_goTypes = nil
	file_assistant_tool_proto_depIdxs = nil
}
