// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.20.3
// source: assistant-deployment.proto

package lexatic_backend

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	AssistantDeploymentService_CreateAssistantApiDeployment_FullMethodName       = "/assistant_api.AssistantDeploymentService/CreateAssistantApiDeployment"
	AssistantDeploymentService_GetAssistantApiDeployment_FullMethodName          = "/assistant_api.AssistantDeploymentService/GetAssistantApiDeployment"
	AssistantDeploymentService_CreateAssistantWebpluginDeployment_FullMethodName = "/assistant_api.AssistantDeploymentService/CreateAssistantWebpluginDeployment"
	AssistantDeploymentService_GetAssistantWebpluginDeployment_FullMethodName    = "/assistant_api.AssistantDeploymentService/GetAssistantWebpluginDeployment"
	AssistantDeploymentService_CreateAssistantDebuggerDeployment_FullMethodName  = "/assistant_api.AssistantDeploymentService/CreateAssistantDebuggerDeployment"
	AssistantDeploymentService_GetAssistantDebuggerDeployment_FullMethodName     = "/assistant_api.AssistantDeploymentService/GetAssistantDebuggerDeployment"
	AssistantDeploymentService_CreateAssistantWhatsappDeployment_FullMethodName  = "/assistant_api.AssistantDeploymentService/CreateAssistantWhatsappDeployment"
	AssistantDeploymentService_GetAssistantWhatsappDeployment_FullMethodName     = "/assistant_api.AssistantDeploymentService/GetAssistantWhatsappDeployment"
	AssistantDeploymentService_CreateAssistantPhoneDeployment_FullMethodName     = "/assistant_api.AssistantDeploymentService/CreateAssistantPhoneDeployment"
	AssistantDeploymentService_GetAssistantPhoneDeployment_FullMethodName        = "/assistant_api.AssistantDeploymentService/GetAssistantPhoneDeployment"
)

// AssistantDeploymentServiceClient is the client API for AssistantDeploymentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AssistantDeploymentServiceClient interface {
	CreateAssistantApiDeployment(ctx context.Context, in *CreateAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantApiDeploymentResponse, error)
	GetAssistantApiDeployment(ctx context.Context, in *GetAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantApiDeploymentResponse, error)
	CreateAssistantWebpluginDeployment(ctx context.Context, in *CreateAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantWebpluginDeploymentResponse, error)
	GetAssistantWebpluginDeployment(ctx context.Context, in *GetAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantWebpluginDeploymentResponse, error)
	CreateAssistantDebuggerDeployment(ctx context.Context, in *CreateAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantDebuggerDeploymentResponse, error)
	GetAssistantDebuggerDeployment(ctx context.Context, in *GetAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantDebuggerDeploymentResponse, error)
	CreateAssistantWhatsappDeployment(ctx context.Context, in *CreateAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantWhatsappDeploymentResponse, error)
	GetAssistantWhatsappDeployment(ctx context.Context, in *GetAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantWhatsappDeploymentResponse, error)
	CreateAssistantPhoneDeployment(ctx context.Context, in *CreateAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantPhoneDeploymentResponse, error)
	GetAssistantPhoneDeployment(ctx context.Context, in *GetAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantPhoneDeploymentResponse, error)
}

type assistantDeploymentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAssistantDeploymentServiceClient(cc grpc.ClientConnInterface) AssistantDeploymentServiceClient {
	return &assistantDeploymentServiceClient{cc}
}

func (c *assistantDeploymentServiceClient) CreateAssistantApiDeployment(ctx context.Context, in *CreateAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantApiDeploymentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAssistantApiDeploymentResponse)
	err := c.cc.Invoke(ctx, AssistantDeploymentService_CreateAssistantApiDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assistantDeploymentServiceClient) GetAssistantApiDeployment(ctx context.Context, in *GetAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantApiDeploymentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAssistantApiDeploymentResponse)
	err := c.cc.Invoke(ctx, AssistantDeploymentService_GetAssistantApiDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assistantDeploymentServiceClient) CreateAssistantWebpluginDeployment(ctx context.Context, in *CreateAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantWebpluginDeploymentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAssistantWebpluginDeploymentResponse)
	err := c.cc.Invoke(ctx, AssistantDeploymentService_CreateAssistantWebpluginDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assistantDeploymentServiceClient) GetAssistantWebpluginDeployment(ctx context.Context, in *GetAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantWebpluginDeploymentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAssistantWebpluginDeploymentResponse)
	err := c.cc.Invoke(ctx, AssistantDeploymentService_GetAssistantWebpluginDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assistantDeploymentServiceClient) CreateAssistantDebuggerDeployment(ctx context.Context, in *CreateAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantDebuggerDeploymentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAssistantDebuggerDeploymentResponse)
	err := c.cc.Invoke(ctx, AssistantDeploymentService_CreateAssistantDebuggerDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assistantDeploymentServiceClient) GetAssistantDebuggerDeployment(ctx context.Context, in *GetAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantDebuggerDeploymentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAssistantDebuggerDeploymentResponse)
	err := c.cc.Invoke(ctx, AssistantDeploymentService_GetAssistantDebuggerDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assistantDeploymentServiceClient) CreateAssistantWhatsappDeployment(ctx context.Context, in *CreateAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantWhatsappDeploymentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAssistantWhatsappDeploymentResponse)
	err := c.cc.Invoke(ctx, AssistantDeploymentService_CreateAssistantWhatsappDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assistantDeploymentServiceClient) GetAssistantWhatsappDeployment(ctx context.Context, in *GetAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantWhatsappDeploymentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAssistantWhatsappDeploymentResponse)
	err := c.cc.Invoke(ctx, AssistantDeploymentService_GetAssistantWhatsappDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assistantDeploymentServiceClient) CreateAssistantPhoneDeployment(ctx context.Context, in *CreateAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantPhoneDeploymentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAssistantPhoneDeploymentResponse)
	err := c.cc.Invoke(ctx, AssistantDeploymentService_CreateAssistantPhoneDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assistantDeploymentServiceClient) GetAssistantPhoneDeployment(ctx context.Context, in *GetAssistantDeploymentRequest, opts ...grpc.CallOption) (*GetAssistantPhoneDeploymentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAssistantPhoneDeploymentResponse)
	err := c.cc.Invoke(ctx, AssistantDeploymentService_GetAssistantPhoneDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AssistantDeploymentServiceServer is the server API for AssistantDeploymentService service.
// All implementations should embed UnimplementedAssistantDeploymentServiceServer
// for forward compatibility.
type AssistantDeploymentServiceServer interface {
	CreateAssistantApiDeployment(context.Context, *CreateAssistantDeploymentRequest) (*GetAssistantApiDeploymentResponse, error)
	GetAssistantApiDeployment(context.Context, *GetAssistantDeploymentRequest) (*GetAssistantApiDeploymentResponse, error)
	CreateAssistantWebpluginDeployment(context.Context, *CreateAssistantDeploymentRequest) (*GetAssistantWebpluginDeploymentResponse, error)
	GetAssistantWebpluginDeployment(context.Context, *GetAssistantDeploymentRequest) (*GetAssistantWebpluginDeploymentResponse, error)
	CreateAssistantDebuggerDeployment(context.Context, *CreateAssistantDeploymentRequest) (*GetAssistantDebuggerDeploymentResponse, error)
	GetAssistantDebuggerDeployment(context.Context, *GetAssistantDeploymentRequest) (*GetAssistantDebuggerDeploymentResponse, error)
	CreateAssistantWhatsappDeployment(context.Context, *CreateAssistantDeploymentRequest) (*GetAssistantWhatsappDeploymentResponse, error)
	GetAssistantWhatsappDeployment(context.Context, *GetAssistantDeploymentRequest) (*GetAssistantWhatsappDeploymentResponse, error)
	CreateAssistantPhoneDeployment(context.Context, *CreateAssistantDeploymentRequest) (*GetAssistantPhoneDeploymentResponse, error)
	GetAssistantPhoneDeployment(context.Context, *GetAssistantDeploymentRequest) (*GetAssistantPhoneDeploymentResponse, error)
}

// UnimplementedAssistantDeploymentServiceServer should be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedAssistantDeploymentServiceServer struct{}

func (UnimplementedAssistantDeploymentServiceServer) CreateAssistantApiDeployment(context.Context, *CreateAssistantDeploymentRequest) (*GetAssistantApiDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAssistantApiDeployment not implemented")
}
func (UnimplementedAssistantDeploymentServiceServer) GetAssistantApiDeployment(context.Context, *GetAssistantDeploymentRequest) (*GetAssistantApiDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAssistantApiDeployment not implemented")
}
func (UnimplementedAssistantDeploymentServiceServer) CreateAssistantWebpluginDeployment(context.Context, *CreateAssistantDeploymentRequest) (*GetAssistantWebpluginDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAssistantWebpluginDeployment not implemented")
}
func (UnimplementedAssistantDeploymentServiceServer) GetAssistantWebpluginDeployment(context.Context, *GetAssistantDeploymentRequest) (*GetAssistantWebpluginDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAssistantWebpluginDeployment not implemented")
}
func (UnimplementedAssistantDeploymentServiceServer) CreateAssistantDebuggerDeployment(context.Context, *CreateAssistantDeploymentRequest) (*GetAssistantDebuggerDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAssistantDebuggerDeployment not implemented")
}
func (UnimplementedAssistantDeploymentServiceServer) GetAssistantDebuggerDeployment(context.Context, *GetAssistantDeploymentRequest) (*GetAssistantDebuggerDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAssistantDebuggerDeployment not implemented")
}
func (UnimplementedAssistantDeploymentServiceServer) CreateAssistantWhatsappDeployment(context.Context, *CreateAssistantDeploymentRequest) (*GetAssistantWhatsappDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAssistantWhatsappDeployment not implemented")
}
func (UnimplementedAssistantDeploymentServiceServer) GetAssistantWhatsappDeployment(context.Context, *GetAssistantDeploymentRequest) (*GetAssistantWhatsappDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAssistantWhatsappDeployment not implemented")
}
func (UnimplementedAssistantDeploymentServiceServer) CreateAssistantPhoneDeployment(context.Context, *CreateAssistantDeploymentRequest) (*GetAssistantPhoneDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAssistantPhoneDeployment not implemented")
}
func (UnimplementedAssistantDeploymentServiceServer) GetAssistantPhoneDeployment(context.Context, *GetAssistantDeploymentRequest) (*GetAssistantPhoneDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAssistantPhoneDeployment not implemented")
}
func (UnimplementedAssistantDeploymentServiceServer) testEmbeddedByValue() {}

// UnsafeAssistantDeploymentServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AssistantDeploymentServiceServer will
// result in compilation errors.
type UnsafeAssistantDeploymentServiceServer interface {
	mustEmbedUnimplementedAssistantDeploymentServiceServer()
}

func RegisterAssistantDeploymentServiceServer(s grpc.ServiceRegistrar, srv AssistantDeploymentServiceServer) {
	// If the following call pancis, it indicates UnimplementedAssistantDeploymentServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&AssistantDeploymentService_ServiceDesc, srv)
}

func _AssistantDeploymentService_CreateAssistantApiDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAssistantDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssistantDeploymentServiceServer).CreateAssistantApiDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AssistantDeploymentService_CreateAssistantApiDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssistantDeploymentServiceServer).CreateAssistantApiDeployment(ctx, req.(*CreateAssistantDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssistantDeploymentService_GetAssistantApiDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssistantDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssistantDeploymentServiceServer).GetAssistantApiDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AssistantDeploymentService_GetAssistantApiDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssistantDeploymentServiceServer).GetAssistantApiDeployment(ctx, req.(*GetAssistantDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssistantDeploymentService_CreateAssistantWebpluginDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAssistantDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssistantDeploymentServiceServer).CreateAssistantWebpluginDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AssistantDeploymentService_CreateAssistantWebpluginDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssistantDeploymentServiceServer).CreateAssistantWebpluginDeployment(ctx, req.(*CreateAssistantDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssistantDeploymentService_GetAssistantWebpluginDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssistantDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssistantDeploymentServiceServer).GetAssistantWebpluginDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AssistantDeploymentService_GetAssistantWebpluginDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssistantDeploymentServiceServer).GetAssistantWebpluginDeployment(ctx, req.(*GetAssistantDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssistantDeploymentService_CreateAssistantDebuggerDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAssistantDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssistantDeploymentServiceServer).CreateAssistantDebuggerDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AssistantDeploymentService_CreateAssistantDebuggerDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssistantDeploymentServiceServer).CreateAssistantDebuggerDeployment(ctx, req.(*CreateAssistantDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssistantDeploymentService_GetAssistantDebuggerDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssistantDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssistantDeploymentServiceServer).GetAssistantDebuggerDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AssistantDeploymentService_GetAssistantDebuggerDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssistantDeploymentServiceServer).GetAssistantDebuggerDeployment(ctx, req.(*GetAssistantDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssistantDeploymentService_CreateAssistantWhatsappDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAssistantDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssistantDeploymentServiceServer).CreateAssistantWhatsappDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AssistantDeploymentService_CreateAssistantWhatsappDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssistantDeploymentServiceServer).CreateAssistantWhatsappDeployment(ctx, req.(*CreateAssistantDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssistantDeploymentService_GetAssistantWhatsappDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssistantDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssistantDeploymentServiceServer).GetAssistantWhatsappDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AssistantDeploymentService_GetAssistantWhatsappDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssistantDeploymentServiceServer).GetAssistantWhatsappDeployment(ctx, req.(*GetAssistantDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssistantDeploymentService_CreateAssistantPhoneDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAssistantDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssistantDeploymentServiceServer).CreateAssistantPhoneDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AssistantDeploymentService_CreateAssistantPhoneDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssistantDeploymentServiceServer).CreateAssistantPhoneDeployment(ctx, req.(*CreateAssistantDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssistantDeploymentService_GetAssistantPhoneDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssistantDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssistantDeploymentServiceServer).GetAssistantPhoneDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AssistantDeploymentService_GetAssistantPhoneDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssistantDeploymentServiceServer).GetAssistantPhoneDeployment(ctx, req.(*GetAssistantDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AssistantDeploymentService_ServiceDesc is the grpc.ServiceDesc for AssistantDeploymentService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AssistantDeploymentService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "assistant_api.AssistantDeploymentService",
	HandlerType: (*AssistantDeploymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAssistantApiDeployment",
			Handler:    _AssistantDeploymentService_CreateAssistantApiDeployment_Handler,
		},
		{
			MethodName: "GetAssistantApiDeployment",
			Handler:    _AssistantDeploymentService_GetAssistantApiDeployment_Handler,
		},
		{
			MethodName: "CreateAssistantWebpluginDeployment",
			Handler:    _AssistantDeploymentService_CreateAssistantWebpluginDeployment_Handler,
		},
		{
			MethodName: "GetAssistantWebpluginDeployment",
			Handler:    _AssistantDeploymentService_GetAssistantWebpluginDeployment_Handler,
		},
		{
			MethodName: "CreateAssistantDebuggerDeployment",
			Handler:    _AssistantDeploymentService_CreateAssistantDebuggerDeployment_Handler,
		},
		{
			MethodName: "GetAssistantDebuggerDeployment",
			Handler:    _AssistantDeploymentService_GetAssistantDebuggerDeployment_Handler,
		},
		{
			MethodName: "CreateAssistantWhatsappDeployment",
			Handler:    _AssistantDeploymentService_CreateAssistantWhatsappDeployment_Handler,
		},
		{
			MethodName: "GetAssistantWhatsappDeployment",
			Handler:    _AssistantDeploymentService_GetAssistantWhatsappDeployment_Handler,
		},
		{
			MethodName: "CreateAssistantPhoneDeployment",
			Handler:    _AssistantDeploymentService_CreateAssistantPhoneDeployment_Handler,
		},
		{
			MethodName: "GetAssistantPhoneDeployment",
			Handler:    _AssistantDeploymentService_GetAssistantPhoneDeployment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "assistant-deployment.proto",
}
