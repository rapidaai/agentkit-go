// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: talk-api.proto

package lexatic_backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssistantConversationInterruption_InterruptionType int32

const (
	AssistantConversationInterruption_INTERRUPTION_TYPE_UNSPECIFIED AssistantConversationInterruption_InterruptionType = 0
	AssistantConversationInterruption_INTERRUPTION_TYPE_VAD         AssistantConversationInterruption_InterruptionType = 1
	AssistantConversationInterruption_INTERRUPTION_TYPE_WORD        AssistantConversationInterruption_InterruptionType = 2
)

// Enum value maps for AssistantConversationInterruption_InterruptionType.
var (
	AssistantConversationInterruption_InterruptionType_name = map[int32]string{
		0: "INTERRUPTION_TYPE_UNSPECIFIED",
		1: "INTERRUPTION_TYPE_VAD",
		2: "INTERRUPTION_TYPE_WORD",
	}
	AssistantConversationInterruption_InterruptionType_value = map[string]int32{
		"INTERRUPTION_TYPE_UNSPECIFIED": 0,
		"INTERRUPTION_TYPE_VAD":         1,
		"INTERRUPTION_TYPE_WORD":        2,
	}
)

func (x AssistantConversationInterruption_InterruptionType) Enum() *AssistantConversationInterruption_InterruptionType {
	p := new(AssistantConversationInterruption_InterruptionType)
	*p = x
	return p
}

func (x AssistantConversationInterruption_InterruptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssistantConversationInterruption_InterruptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_talk_api_proto_enumTypes[0].Descriptor()
}

func (AssistantConversationInterruption_InterruptionType) Type() protoreflect.EnumType {
	return &file_talk_api_proto_enumTypes[0]
}

func (x AssistantConversationInterruption_InterruptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssistantConversationInterruption_InterruptionType.Descriptor instead.
func (AssistantConversationInterruption_InterruptionType) EnumDescriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{9, 0}
}

type AssistantConversationConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantConversationId uint64                 `protobuf:"varint,1,opt,name=assistantConversationId,proto3" json:"assistantConversationId,omitempty"`
	Assistant               *AssistantDefinition   `protobuf:"bytes,2,opt,name=assistant,proto3" json:"assistant,omitempty"`
	Time                    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Metadata map[string]*anypb.Any `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Args     map[string]*anypb.Any `protobuf:"bytes,5,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Options  map[string]*anypb.Any `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AssistantConversationConfiguration) Reset() {
	*x = AssistantConversationConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConversationConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConversationConfiguration) ProtoMessage() {}

func (x *AssistantConversationConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConversationConfiguration.ProtoReflect.Descriptor instead.
func (*AssistantConversationConfiguration) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{0}
}

func (x *AssistantConversationConfiguration) GetAssistantConversationId() uint64 {
	if x != nil {
		return x.AssistantConversationId
	}
	return 0
}

func (x *AssistantConversationConfiguration) GetAssistant() *AssistantDefinition {
	if x != nil {
		return x.Assistant
	}
	return nil
}

func (x *AssistantConversationConfiguration) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *AssistantConversationConfiguration) GetMetadata() map[string]*anypb.Any {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AssistantConversationConfiguration) GetArgs() map[string]*anypb.Any {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *AssistantConversationConfiguration) GetOptions() map[string]*anypb.Any {
	if x != nil {
		return x.Options
	}
	return nil
}

// buildin action
type AssistantConversationDisconnectAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AssistantConversationDisconnectAction) Reset() {
	*x = AssistantConversationDisconnectAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConversationDisconnectAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConversationDisconnectAction) ProtoMessage() {}

func (x *AssistantConversationDisconnectAction) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConversationDisconnectAction.ProtoReflect.Descriptor instead.
func (*AssistantConversationDisconnectAction) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{1}
}

func (x *AssistantConversationDisconnectAction) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type AssistantConverstationHoldAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HoldTime uint64 `protobuf:"varint,1,opt,name=holdTime,proto3" json:"holdTime,omitempty"`
}

func (x *AssistantConverstationHoldAction) Reset() {
	*x = AssistantConverstationHoldAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConverstationHoldAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConverstationHoldAction) ProtoMessage() {}

func (x *AssistantConverstationHoldAction) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConverstationHoldAction.ProtoReflect.Descriptor instead.
func (*AssistantConverstationHoldAction) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{2}
}

func (x *AssistantConverstationHoldAction) GetHoldTime() uint64 {
	if x != nil {
		return x.HoldTime
	}
	return 0
}

type AssistantConverstationKnowledgeRetrievalAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *AssistantConverstationKnowledgeRetrievalAction) Reset() {
	*x = AssistantConverstationKnowledgeRetrievalAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConverstationKnowledgeRetrievalAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConverstationKnowledgeRetrievalAction) ProtoMessage() {}

func (x *AssistantConverstationKnowledgeRetrievalAction) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConverstationKnowledgeRetrievalAction.ProtoReflect.Descriptor instead.
func (*AssistantConverstationKnowledgeRetrievalAction) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{3}
}

func (x *AssistantConverstationKnowledgeRetrievalAction) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type AssistantConverstationApiRequestAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssistantConverstationApiRequestAction) Reset() {
	*x = AssistantConverstationApiRequestAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConverstationApiRequestAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConverstationApiRequestAction) ProtoMessage() {}

func (x *AssistantConverstationApiRequestAction) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConverstationApiRequestAction.ProtoReflect.Descriptor instead.
func (*AssistantConverstationApiRequestAction) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{4}
}

type AssistantConverstationEndpointAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssistantConverstationEndpointAction) Reset() {
	*x = AssistantConverstationEndpointAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConverstationEndpointAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConverstationEndpointAction) ProtoMessage() {}

func (x *AssistantConverstationEndpointAction) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConverstationEndpointAction.ProtoReflect.Descriptor instead.
func (*AssistantConverstationEndpointAction) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{5}
}

type AssistantConversationDeviationAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssistantConversationDeviationAction) Reset() {
	*x = AssistantConversationDeviationAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConversationDeviationAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConversationDeviationAction) ProtoMessage() {}

func (x *AssistantConversationDeviationAction) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConversationDeviationAction.ProtoReflect.Descriptor instead.
func (*AssistantConversationDeviationAction) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{6}
}

type AssistantConversationAssistantTransferAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssistantConversationAssistantTransferAction) Reset() {
	*x = AssistantConversationAssistantTransferAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConversationAssistantTransferAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConversationAssistantTransferAction) ProtoMessage() {}

func (x *AssistantConversationAssistantTransferAction) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConversationAssistantTransferAction.ProtoReflect.Descriptor instead.
func (*AssistantConversationAssistantTransferAction) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{7}
}

type AssistantConversationPhoneCallTransferAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssistantConversationPhoneCallTransferAction) Reset() {
	*x = AssistantConversationPhoneCallTransferAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConversationPhoneCallTransferAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConversationPhoneCallTransferAction) ProtoMessage() {}

func (x *AssistantConversationPhoneCallTransferAction) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConversationPhoneCallTransferAction.ProtoReflect.Descriptor instead.
func (*AssistantConversationPhoneCallTransferAction) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{8}
}

type AssistantConversationInterruption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string                                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type AssistantConversationInterruption_InterruptionType `protobuf:"varint,2,opt,name=type,proto3,enum=talk_api.AssistantConversationInterruption_InterruptionType" json:"type,omitempty"`
	Time *timestamppb.Timestamp                             `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AssistantConversationInterruption) Reset() {
	*x = AssistantConversationInterruption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConversationInterruption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConversationInterruption) ProtoMessage() {}

func (x *AssistantConversationInterruption) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConversationInterruption.ProtoReflect.Descriptor instead.
func (*AssistantConversationInterruption) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{9}
}

func (x *AssistantConversationInterruption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssistantConversationInterruption) GetType() AssistantConversationInterruption_InterruptionType {
	if x != nil {
		return x.Type
	}
	return AssistantConversationInterruption_INTERRUPTION_TYPE_UNSPECIFIED
}

func (x *AssistantConversationInterruption) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

// format of message
type AssistantConversationMessageTextContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AssistantConversationMessageTextContent) Reset() {
	*x = AssistantConversationMessageTextContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConversationMessageTextContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConversationMessageTextContent) ProtoMessage() {}

func (x *AssistantConversationMessageTextContent) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConversationMessageTextContent.ProtoReflect.Descriptor instead.
func (*AssistantConversationMessageTextContent) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{10}
}

func (x *AssistantConversationMessageTextContent) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AssistantConversationMessageAudioContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AssistantConversationMessageAudioContent) Reset() {
	*x = AssistantConversationMessageAudioContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConversationMessageAudioContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConversationMessageAudioContent) ProtoMessage() {}

func (x *AssistantConversationMessageAudioContent) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConversationMessageAudioContent.ProtoReflect.Descriptor instead.
func (*AssistantConversationMessageAudioContent) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{11}
}

func (x *AssistantConversationMessageAudioContent) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type AssistantConversationUserMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*AssistantConversationUserMessage_Audio
	//	*AssistantConversationUserMessage_Text
	Message   isAssistantConversationUserMessage_Message `protobuf_oneof:"message"`
	Id        string                                     `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Completed bool                                       `protobuf:"varint,3,opt,name=completed,proto3" json:"completed,omitempty"`
	Time      *timestamppb.Timestamp                     `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AssistantConversationUserMessage) Reset() {
	*x = AssistantConversationUserMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConversationUserMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConversationUserMessage) ProtoMessage() {}

func (x *AssistantConversationUserMessage) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConversationUserMessage.ProtoReflect.Descriptor instead.
func (*AssistantConversationUserMessage) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{12}
}

func (m *AssistantConversationUserMessage) GetMessage() isAssistantConversationUserMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *AssistantConversationUserMessage) GetAudio() *AssistantConversationMessageAudioContent {
	if x, ok := x.GetMessage().(*AssistantConversationUserMessage_Audio); ok {
		return x.Audio
	}
	return nil
}

func (x *AssistantConversationUserMessage) GetText() *AssistantConversationMessageTextContent {
	if x, ok := x.GetMessage().(*AssistantConversationUserMessage_Text); ok {
		return x.Text
	}
	return nil
}

func (x *AssistantConversationUserMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssistantConversationUserMessage) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *AssistantConversationUserMessage) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type isAssistantConversationUserMessage_Message interface {
	isAssistantConversationUserMessage_Message()
}

type AssistantConversationUserMessage_Audio struct {
	// audio content
	Audio *AssistantConversationMessageAudioContent `protobuf:"bytes,10,opt,name=audio,proto3,oneof"`
}

type AssistantConversationUserMessage_Text struct {
	// text content
	Text *AssistantConversationMessageTextContent `protobuf:"bytes,11,opt,name=text,proto3,oneof"`
}

func (*AssistantConversationUserMessage_Audio) isAssistantConversationUserMessage_Message() {}

func (*AssistantConversationUserMessage_Text) isAssistantConversationUserMessage_Message() {}

type AssistantConversationAssistantMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*AssistantConversationAssistantMessage_Audio
	//	*AssistantConversationAssistantMessage_Text
	Message isAssistantConversationAssistantMessage_Message `protobuf_oneof:"message"`
	Id        string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Completed bool                   `protobuf:"varint,3,opt,name=completed,proto3" json:"completed,omitempty"`
	Time      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AssistantConversationAssistantMessage) Reset() {
	*x = AssistantConversationAssistantMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantConversationAssistantMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantConversationAssistantMessage) ProtoMessage() {}

func (x *AssistantConversationAssistantMessage) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantConversationAssistantMessage.ProtoReflect.Descriptor instead.
func (*AssistantConversationAssistantMessage) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{13}
}

func (m *AssistantConversationAssistantMessage) GetMessage() isAssistantConversationAssistantMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *AssistantConversationAssistantMessage) GetAudio() *AssistantConversationMessageAudioContent {
	if x, ok := x.GetMessage().(*AssistantConversationAssistantMessage_Audio); ok {
		return x.Audio
	}
	return nil
}

func (x *AssistantConversationAssistantMessage) GetText() *AssistantConversationMessageTextContent {
	if x, ok := x.GetMessage().(*AssistantConversationAssistantMessage_Text); ok {
		return x.Text
	}
	return nil
}

func (x *AssistantConversationAssistantMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssistantConversationAssistantMessage) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *AssistantConversationAssistantMessage) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type isAssistantConversationAssistantMessage_Message interface {
	isAssistantConversationAssistantMessage_Message()
}

type AssistantConversationAssistantMessage_Audio struct {
	// audio content
	Audio *AssistantConversationMessageAudioContent `protobuf:"bytes,10,opt,name=audio,proto3,oneof"`
}

type AssistantConversationAssistantMessage_Text struct {
	// text content
	Text *AssistantConversationMessageTextContent `protobuf:"bytes,11,opt,name=text,proto3,oneof"`
}

func (*AssistantConversationAssistantMessage_Audio) isAssistantConversationAssistantMessage_Message() {
}

func (*AssistantConversationAssistantMessage_Text) isAssistantConversationAssistantMessage_Message() {
}

type AssistantMessagingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*AssistantMessagingRequest_Configuration
	//	*AssistantMessagingRequest_Message
	Request isAssistantMessagingRequest_Request `protobuf_oneof:"request"`
}

func (x *AssistantMessagingRequest) Reset() {
	*x = AssistantMessagingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMessagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMessagingRequest) ProtoMessage() {}

func (x *AssistantMessagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMessagingRequest.ProtoReflect.Descriptor instead.
func (*AssistantMessagingRequest) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{14}
}

func (m *AssistantMessagingRequest) GetRequest() isAssistantMessagingRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *AssistantMessagingRequest) GetConfiguration() *AssistantConversationConfiguration {
	if x, ok := x.GetRequest().(*AssistantMessagingRequest_Configuration); ok {
		return x.Configuration
	}
	return nil
}

func (x *AssistantMessagingRequest) GetMessage() *AssistantConversationUserMessage {
	if x, ok := x.GetRequest().(*AssistantMessagingRequest_Message); ok {
		return x.Message
	}
	return nil
}

type isAssistantMessagingRequest_Request interface {
	isAssistantMessagingRequest_Request()
}

type AssistantMessagingRequest_Configuration struct {
	// when configuration changed
	Configuration *AssistantConversationConfiguration `protobuf:"bytes,2,opt,name=configuration,proto3,oneof"`
}

type AssistantMessagingRequest_Message struct {
	// message
	Message *AssistantConversationUserMessage `protobuf:"bytes,3,opt,name=message,proto3,oneof"`
}

func (*AssistantMessagingRequest_Configuration) isAssistantMessagingRequest_Request() {}

func (*AssistantMessagingRequest_Message) isAssistantMessagingRequest_Request() {}

type AssistantMessagingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error   *Error `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are assignable to Data:
	//
	//	*AssistantMessagingResponse_Configuration
	//	*AssistantMessagingResponse_Interruption
	//	*AssistantMessagingResponse_User
	//	*AssistantMessagingResponse_Assistant
	//	*AssistantMessagingResponse_Message
	//	*AssistantMessagingResponse_DisconnectAction
	//	*AssistantMessagingResponse_HoldAction
	//	*AssistantMessagingResponse_KnowledgeRetrievalAction
	//	*AssistantMessagingResponse_ApiRequestAction
	//	*AssistantMessagingResponse_EndpointAction
	//	*AssistantMessagingResponse_DeviationAction
	//	*AssistantMessagingResponse_AssistantTransferAction
	//	*AssistantMessagingResponse_PhoneCallTransferAction
	Data isAssistantMessagingResponse_Data `protobuf_oneof:"data"`
}

func (x *AssistantMessagingResponse) Reset() {
	*x = AssistantMessagingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMessagingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMessagingResponse) ProtoMessage() {}

func (x *AssistantMessagingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMessagingResponse.ProtoReflect.Descriptor instead.
func (*AssistantMessagingResponse) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{15}
}

func (x *AssistantMessagingResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AssistantMessagingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AssistantMessagingResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (m *AssistantMessagingResponse) GetData() isAssistantMessagingResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *AssistantMessagingResponse) GetConfiguration() *AssistantConversationConfiguration {
	if x, ok := x.GetData().(*AssistantMessagingResponse_Configuration); ok {
		return x.Configuration
	}
	return nil
}

func (x *AssistantMessagingResponse) GetInterruption() *AssistantConversationInterruption {
	if x, ok := x.GetData().(*AssistantMessagingResponse_Interruption); ok {
		return x.Interruption
	}
	return nil
}

func (x *AssistantMessagingResponse) GetUser() *AssistantConversationUserMessage {
	if x, ok := x.GetData().(*AssistantMessagingResponse_User); ok {
		return x.User
	}
	return nil
}

func (x *AssistantMessagingResponse) GetAssistant() *AssistantConversationAssistantMessage {
	if x, ok := x.GetData().(*AssistantMessagingResponse_Assistant); ok {
		return x.Assistant
	}
	return nil
}

func (x *AssistantMessagingResponse) GetMessage() *AssistantConversationMessage {
	if x, ok := x.GetData().(*AssistantMessagingResponse_Message); ok {
		return x.Message
	}
	return nil
}

func (x *AssistantMessagingResponse) GetDisconnectAction() *AssistantConversationDisconnectAction {
	if x, ok := x.GetData().(*AssistantMessagingResponse_DisconnectAction); ok {
		return x.DisconnectAction
	}
	return nil
}

func (x *AssistantMessagingResponse) GetHoldAction() *AssistantConverstationHoldAction {
	if x, ok := x.GetData().(*AssistantMessagingResponse_HoldAction); ok {
		return x.HoldAction
	}
	return nil
}

func (x *AssistantMessagingResponse) GetKnowledgeRetrievalAction() *AssistantConverstationKnowledgeRetrievalAction {
	if x, ok := x.GetData().(*AssistantMessagingResponse_KnowledgeRetrievalAction); ok {
		return x.KnowledgeRetrievalAction
	}
	return nil
}

func (x *AssistantMessagingResponse) GetApiRequestAction() *AssistantConverstationApiRequestAction {
	if x, ok := x.GetData().(*AssistantMessagingResponse_ApiRequestAction); ok {
		return x.ApiRequestAction
	}
	return nil
}

func (x *AssistantMessagingResponse) GetEndpointAction() *AssistantConverstationEndpointAction {
	if x, ok := x.GetData().(*AssistantMessagingResponse_EndpointAction); ok {
		return x.EndpointAction
	}
	return nil
}

func (x *AssistantMessagingResponse) GetDeviationAction() *AssistantConversationDeviationAction {
	if x, ok := x.GetData().(*AssistantMessagingResponse_DeviationAction); ok {
		return x.DeviationAction
	}
	return nil
}

func (x *AssistantMessagingResponse) GetAssistantTransferAction() *AssistantConversationAssistantTransferAction {
	if x, ok := x.GetData().(*AssistantMessagingResponse_AssistantTransferAction); ok {
		return x.AssistantTransferAction
	}
	return nil
}

func (x *AssistantMessagingResponse) GetPhoneCallTransferAction() *AssistantConversationPhoneCallTransferAction {
	if x, ok := x.GetData().(*AssistantMessagingResponse_PhoneCallTransferAction); ok {
		return x.PhoneCallTransferAction
	}
	return nil
}

type isAssistantMessagingResponse_Data interface {
	isAssistantMessagingResponse_Data()
}

type AssistantMessagingResponse_Configuration struct {
	// when it get configured
	Configuration *AssistantConversationConfiguration `protobuf:"bytes,9,opt,name=configuration,proto3,oneof"`
}

type AssistantMessagingResponse_Interruption struct {
	// when interrupt
	Interruption *AssistantConversationInterruption `protobuf:"bytes,10,opt,name=interruption,proto3,oneof"`
}

type AssistantMessagingResponse_User struct {
	// only user message
	User *AssistantConversationUserMessage `protobuf:"bytes,11,opt,name=user,proto3,oneof"`
}

type AssistantMessagingResponse_Assistant struct {
	Assistant *AssistantConversationAssistantMessage `protobuf:"bytes,12,opt,name=assistant,proto3,oneof"`
}

type AssistantMessagingResponse_Message struct {
	// when complete
	Message *AssistantConversationMessage `protobuf:"bytes,13,opt,name=message,proto3,oneof"`
}

type AssistantMessagingResponse_DisconnectAction struct {
	// disconnect actions
	DisconnectAction *AssistantConversationDisconnectAction `protobuf:"bytes,14,opt,name=disconnectAction,proto3,oneof"`
}

type AssistantMessagingResponse_HoldAction struct {
	// hold actions
	HoldAction *AssistantConverstationHoldAction `protobuf:"bytes,15,opt,name=holdAction,proto3,oneof"`
}

type AssistantMessagingResponse_KnowledgeRetrievalAction struct {
	// knowledgeRetrieval actions
	KnowledgeRetrievalAction *AssistantConverstationKnowledgeRetrievalAction `protobuf:"bytes,16,opt,name=knowledgeRetrievalAction,proto3,oneof"`
}

type AssistantMessagingResponse_ApiRequestAction struct {
	// apiRequestAction actions
	ApiRequestAction *AssistantConverstationApiRequestAction `protobuf:"bytes,17,opt,name=apiRequestAction,proto3,oneof"`
}

type AssistantMessagingResponse_EndpointAction struct {
	// endpointAction actions
	EndpointAction *AssistantConverstationEndpointAction `protobuf:"bytes,18,opt,name=endpointAction,proto3,oneof"`
}

type AssistantMessagingResponse_DeviationAction struct {
	// deviationAction actions
	DeviationAction *AssistantConversationDeviationAction `protobuf:"bytes,19,opt,name=deviationAction,proto3,oneof"`
}

type AssistantMessagingResponse_AssistantTransferAction struct {
	// assistantTransferAction actions
	AssistantTransferAction *AssistantConversationAssistantTransferAction `protobuf:"bytes,20,opt,name=assistantTransferAction,proto3,oneof"`
}

type AssistantMessagingResponse_PhoneCallTransferAction struct {
	// phoneCallTransferAction actions
	PhoneCallTransferAction *AssistantConversationPhoneCallTransferAction `protobuf:"bytes,21,opt,name=phoneCallTransferAction,proto3,oneof"`
}

func (*AssistantMessagingResponse_Configuration) isAssistantMessagingResponse_Data() {}

func (*AssistantMessagingResponse_Interruption) isAssistantMessagingResponse_Data() {}

func (*AssistantMessagingResponse_User) isAssistantMessagingResponse_Data() {}

func (*AssistantMessagingResponse_Assistant) isAssistantMessagingResponse_Data() {}

func (*AssistantMessagingResponse_Message) isAssistantMessagingResponse_Data() {}

func (*AssistantMessagingResponse_DisconnectAction) isAssistantMessagingResponse_Data() {}

func (*AssistantMessagingResponse_HoldAction) isAssistantMessagingResponse_Data() {}

func (*AssistantMessagingResponse_KnowledgeRetrievalAction) isAssistantMessagingResponse_Data() {}

func (*AssistantMessagingResponse_ApiRequestAction) isAssistantMessagingResponse_Data() {}

func (*AssistantMessagingResponse_EndpointAction) isAssistantMessagingResponse_Data() {}

func (*AssistantMessagingResponse_DeviationAction) isAssistantMessagingResponse_Data() {}

func (*AssistantMessagingResponse_AssistantTransferAction) isAssistantMessagingResponse_Data() {}

func (*AssistantMessagingResponse_PhoneCallTransferAction) isAssistantMessagingResponse_Data() {}

type CreateMessageMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId             uint64    `protobuf:"varint,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	AssistantConversationId uint64    `protobuf:"varint,2,opt,name=assistantConversationId,proto3" json:"assistantConversationId,omitempty"`
	MessageId               string    `protobuf:"bytes,3,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Metrics                 []*Metric `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *CreateMessageMetricRequest) Reset() {
	*x = CreateMessageMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageMetricRequest) ProtoMessage() {}

func (x *CreateMessageMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageMetricRequest.ProtoReflect.Descriptor instead.
func (*CreateMessageMetricRequest) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{16}
}

func (x *CreateMessageMetricRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *CreateMessageMetricRequest) GetAssistantConversationId() uint64 {
	if x != nil {
		return x.AssistantConversationId
	}
	return 0
}

func (x *CreateMessageMetricRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *CreateMessageMetricRequest) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type CreateMessageMetricResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success bool      `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data    []*Metric `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   *Error    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateMessageMetricResponse) Reset() {
	*x = CreateMessageMetricResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageMetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageMetricResponse) ProtoMessage() {}

func (x *CreateMessageMetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageMetricResponse.ProtoReflect.Descriptor instead.
func (*CreateMessageMetricResponse) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{17}
}

func (x *CreateMessageMetricResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateMessageMetricResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateMessageMetricResponse) GetData() []*Metric {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateMessageMetricResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CreateConversationMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssistantId             uint64    `protobuf:"varint,1,opt,name=assistantId,proto3" json:"assistantId,omitempty"`
	AssistantConversationId uint64    `protobuf:"varint,2,opt,name=assistantConversationId,proto3" json:"assistantConversationId,omitempty"`
	Metrics                 []*Metric `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *CreateConversationMetricRequest) Reset() {
	*x = CreateConversationMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConversationMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationMetricRequest) ProtoMessage() {}

func (x *CreateConversationMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationMetricRequest.ProtoReflect.Descriptor instead.
func (*CreateConversationMetricRequest) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{18}
}

func (x *CreateConversationMetricRequest) GetAssistantId() uint64 {
	if x != nil {
		return x.AssistantId
	}
	return 0
}

func (x *CreateConversationMetricRequest) GetAssistantConversationId() uint64 {
	if x != nil {
		return x.AssistantConversationId
	}
	return 0
}

func (x *CreateConversationMetricRequest) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type CreateConversationMetricResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success bool      `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data    []*Metric `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   *Error    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateConversationMetricResponse) Reset() {
	*x = CreateConversationMetricResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConversationMetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationMetricResponse) ProtoMessage() {}

func (x *CreateConversationMetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationMetricResponse.ProtoReflect.Descriptor instead.
func (*CreateConversationMetricResponse) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{19}
}

func (x *CreateConversationMetricResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateConversationMetricResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateConversationMetricResponse) GetData() []*Metric {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateConversationMetricResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CreatePhoneCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assistant  *AssistantDefinition  `protobuf:"bytes,1,opt,name=assistant,proto3" json:"assistant,omitempty"`
	Metadata   map[string]*anypb.Any `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Args       map[string]*anypb.Any `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Options    map[string]*anypb.Any `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FromNumber string                `protobuf:"bytes,6,opt,name=fromNumber,proto3" json:"fromNumber,omitempty"`
	ToNumber   string                `protobuf:"bytes,7,opt,name=toNumber,proto3" json:"toNumber,omitempty"`
}

func (x *CreatePhoneCallRequest) Reset() {
	*x = CreatePhoneCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhoneCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhoneCallRequest) ProtoMessage() {}

func (x *CreatePhoneCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhoneCallRequest.ProtoReflect.Descriptor instead.
func (*CreatePhoneCallRequest) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{20}
}

func (x *CreatePhoneCallRequest) GetAssistant() *AssistantDefinition {
	if x != nil {
		return x.Assistant
	}
	return nil
}

func (x *CreatePhoneCallRequest) GetMetadata() map[string]*anypb.Any {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreatePhoneCallRequest) GetArgs() map[string]*anypb.Any {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CreatePhoneCallRequest) GetOptions() map[string]*anypb.Any {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreatePhoneCallRequest) GetFromNumber() string {
	if x != nil {
		return x.FromNumber
	}
	return ""
}

func (x *CreatePhoneCallRequest) GetToNumber() string {
	if x != nil {
		return x.ToNumber
	}
	return ""
}

type CreatePhoneCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data    *AssistantConversation `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   *Error                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreatePhoneCallResponse) Reset() {
	*x = CreatePhoneCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhoneCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhoneCallResponse) ProtoMessage() {}

func (x *CreatePhoneCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhoneCallResponse.ProtoReflect.Descriptor instead.
func (*CreatePhoneCallResponse) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{21}
}

func (x *CreatePhoneCallResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreatePhoneCallResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreatePhoneCallResponse) GetData() *AssistantConversation {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreatePhoneCallResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CreateBulkPhoneCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneCalls []*CreatePhoneCallRequest `protobuf:"bytes,6,rep,name=phoneCalls,proto3" json:"phoneCalls,omitempty"`
}

func (x *CreateBulkPhoneCallRequest) Reset() {
	*x = CreateBulkPhoneCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBulkPhoneCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkPhoneCallRequest) ProtoMessage() {}

func (x *CreateBulkPhoneCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBulkPhoneCallRequest.ProtoReflect.Descriptor instead.
func (*CreateBulkPhoneCallRequest) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{22}
}

func (x *CreateBulkPhoneCallRequest) GetPhoneCalls() []*CreatePhoneCallRequest {
	if x != nil {
		return x.PhoneCalls
	}
	return nil
}

type CreateBulkPhoneCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success bool                     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Data    []*AssistantConversation `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   *Error                   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateBulkPhoneCallResponse) Reset() {
	*x = CreateBulkPhoneCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talk_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBulkPhoneCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkPhoneCallResponse) ProtoMessage() {}

func (x *CreateBulkPhoneCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_talk_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBulkPhoneCallResponse.ProtoReflect.Descriptor instead.
func (*CreateBulkPhoneCallResponse) Descriptor() ([]byte, []int) {
	return file_talk_api_proto_rawDescGZIP(), []int{23}
}

func (x *CreateBulkPhoneCallResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateBulkPhoneCallResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateBulkPhoneCallResponse) GetData() []*AssistantConversation {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateBulkPhoneCallResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_talk_api_proto protoreflect.FileDescriptor

var file_talk_api_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x61, 0x6c, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x05, 0x0a, 0x22, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x17, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x17, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x2e, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x56, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x12, 0x53, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x39, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x51, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4d, 0x0a, 0x09, 0x41, 0x72, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x50, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f, 0x0a, 0x25, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x20, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x22, 0x28, 0x0a, 0x26, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a,
	0x24, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x24, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a,
	0x2c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a,
	0x2c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x02,
	0x0a, 0x21, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x50, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3c, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x52, 0x55, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x52, 0x55, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x56, 0x41, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x52, 0x55, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x4f, 0x52,
	0x44, 0x10, 0x02, 0x22, 0x43, 0x0a, 0x27, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x28, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa0,
	0x02, 0x0a, 0x20, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12,
	0x47, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0xa5, 0x02, 0x0a, 0x25, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x61, 0x6c,
	0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x47, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2e,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x19, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x8a, 0x0a, 0x0a, 0x1a, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x54, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x51, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x61, 0x6c, 0x6b,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74,
	0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4c, 0x0a, 0x0a, 0x68, 0x6f, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x6f, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x76, 0x0a, 0x18, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x18, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61,
	0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x10, 0x61, 0x70, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x61, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x5a, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x61, 0x6c,
	0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x65,
	0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x72, 0x0a,
	0x17, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x72, 0x0a, 0x17, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc1, 0x01,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x3c, 0x0a, 0x17, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x17, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x22, 0x86, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x1b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xa8, 0x01, 0x0a, 0x1f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x17, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x17, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0xd1, 0x04, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x09, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3e,
	0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74,
	0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41,
	0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x47,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x1a, 0x51, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4d, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x50, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x91, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5e, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0a, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x1b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x32, 0xce, 0x05, 0x0a, 0x0b, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x54, 0x61, 0x6c, 0x6b, 0x12, 0x23, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x61, 0x6c, 0x6b,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x68, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x62, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x24, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x12, 0x29, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74,
	0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x20, 0x2e, 0x74, 0x61,
	0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x62, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x24, 0x2e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x6c, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x50, 0x0a, 0x17, 0x61, 0x69, 0x2e, 0x72, 0x61, 0x70, 0x69, 0x64,
	0x61, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x5a,
	0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x78, 0x61,
	0x74, 0x69, 0x63, 0x2f, 0x77, 0x65, 0x62, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6c, 0x65, 0x78, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_talk_api_proto_rawDescOnce sync.Once
	file_talk_api_proto_rawDescData = file_talk_api_proto_rawDesc
)

func file_talk_api_proto_rawDescGZIP() []byte {
	file_talk_api_proto_rawDescOnce.Do(func() {
		file_talk_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_talk_api_proto_rawDescData)
	})
	return file_talk_api_proto_rawDescData
}

var file_talk_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_talk_api_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_talk_api_proto_goTypes = []any{
	(AssistantConversationInterruption_InterruptionType)(0), // 0: talk_api.AssistantConversationInterruption.InterruptionType
	(*AssistantConversationConfiguration)(nil),              // 1: talk_api.AssistantConversationConfiguration
	(*AssistantConversationDisconnectAction)(nil),           // 2: talk_api.AssistantConversationDisconnectAction
	(*AssistantConverstationHoldAction)(nil),                // 3: talk_api.AssistantConverstationHoldAction
	(*AssistantConverstationKnowledgeRetrievalAction)(nil),  // 4: talk_api.AssistantConverstationKnowledgeRetrievalAction
	(*AssistantConverstationApiRequestAction)(nil),          // 5: talk_api.AssistantConverstationApiRequestAction
	(*AssistantConverstationEndpointAction)(nil),            // 6: talk_api.AssistantConverstationEndpointAction
	(*AssistantConversationDeviationAction)(nil),            // 7: talk_api.AssistantConversationDeviationAction
	(*AssistantConversationAssistantTransferAction)(nil),    // 8: talk_api.AssistantConversationAssistantTransferAction
	(*AssistantConversationPhoneCallTransferAction)(nil),    // 9: talk_api.AssistantConversationPhoneCallTransferAction
	(*AssistantConversationInterruption)(nil),               // 10: talk_api.AssistantConversationInterruption
	(*AssistantConversationMessageTextContent)(nil),         // 11: talk_api.AssistantConversationMessageTextContent
	(*AssistantConversationMessageAudioContent)(nil),        // 12: talk_api.AssistantConversationMessageAudioContent
	(*AssistantConversationUserMessage)(nil),                // 13: talk_api.AssistantConversationUserMessage
	(*AssistantConversationAssistantMessage)(nil),           // 14: talk_api.AssistantConversationAssistantMessage
	(*AssistantMessagingRequest)(nil),                       // 15: talk_api.AssistantMessagingRequest
	(*AssistantMessagingResponse)(nil),                      // 16: talk_api.AssistantMessagingResponse
	(*CreateMessageMetricRequest)(nil),                      // 17: talk_api.CreateMessageMetricRequest
	(*CreateMessageMetricResponse)(nil),                     // 18: talk_api.CreateMessageMetricResponse
	(*CreateConversationMetricRequest)(nil),                 // 19: talk_api.CreateConversationMetricRequest
	(*CreateConversationMetricResponse)(nil),                // 20: talk_api.CreateConversationMetricResponse
	(*CreatePhoneCallRequest)(nil),                          // 21: talk_api.CreatePhoneCallRequest
	(*CreatePhoneCallResponse)(nil),                         // 22: talk_api.CreatePhoneCallResponse
	(*CreateBulkPhoneCallRequest)(nil),                      // 23: talk_api.CreateBulkPhoneCallRequest
	(*CreateBulkPhoneCallResponse)(nil),                     // 24: talk_api.CreateBulkPhoneCallResponse
	nil,                                                     // 25: talk_api.AssistantConversationConfiguration.MetadataEntry
	nil,                                                     // 26: talk_api.AssistantConversationConfiguration.ArgsEntry
	nil,                                                     // 27: talk_api.AssistantConversationConfiguration.OptionsEntry
	nil,                                                     // 28: talk_api.CreatePhoneCallRequest.MetadataEntry
	nil,                                                     // 29: talk_api.CreatePhoneCallRequest.ArgsEntry
	nil,                                                     // 30: talk_api.CreatePhoneCallRequest.OptionsEntry
	(*AssistantDefinition)(nil),                             // 31: AssistantDefinition
	(*timestamppb.Timestamp)(nil),                           // 32: google.protobuf.Timestamp
	(*Error)(nil),                                           // 33: Error
	(*AssistantConversationMessage)(nil),                    // 34: AssistantConversationMessage
	(*Metric)(nil),                                          // 35: Metric
	(*AssistantConversation)(nil),                           // 36: AssistantConversation
	(*anypb.Any)(nil),                                       // 37: google.protobuf.Any
	(*GetAllAssistantConversationRequest)(nil),              // 38: GetAllAssistantConversationRequest
	(*GetAllConversationMessageRequest)(nil),                // 39: GetAllConversationMessageRequest
	(*GetAllAssistantConversationResponse)(nil),             // 40: GetAllAssistantConversationResponse
	(*GetAllConversationMessageResponse)(nil),               // 41: GetAllConversationMessageResponse
}
var file_talk_api_proto_depIdxs = []int32{
	31, // 0: talk_api.AssistantConversationConfiguration.assistant:type_name -> AssistantDefinition
	32, // 1: talk_api.AssistantConversationConfiguration.time:type_name -> google.protobuf.Timestamp
	25, // 2: talk_api.AssistantConversationConfiguration.metadata:type_name -> talk_api.AssistantConversationConfiguration.MetadataEntry
	26, // 3: talk_api.AssistantConversationConfiguration.args:type_name -> talk_api.AssistantConversationConfiguration.ArgsEntry
	27, // 4: talk_api.AssistantConversationConfiguration.options:type_name -> talk_api.AssistantConversationConfiguration.OptionsEntry
	0,  // 5: talk_api.AssistantConversationInterruption.type:type_name -> talk_api.AssistantConversationInterruption.InterruptionType
	32, // 6: talk_api.AssistantConversationInterruption.time:type_name -> google.protobuf.Timestamp
	12, // 7: talk_api.AssistantConversationUserMessage.audio:type_name -> talk_api.AssistantConversationMessageAudioContent
	11, // 8: talk_api.AssistantConversationUserMessage.text:type_name -> talk_api.AssistantConversationMessageTextContent
	32, // 9: talk_api.AssistantConversationUserMessage.time:type_name -> google.protobuf.Timestamp
	12, // 10: talk_api.AssistantConversationAssistantMessage.audio:type_name -> talk_api.AssistantConversationMessageAudioContent
	11, // 11: talk_api.AssistantConversationAssistantMessage.text:type_name -> talk_api.AssistantConversationMessageTextContent
	32, // 12: talk_api.AssistantConversationAssistantMessage.time:type_name -> google.protobuf.Timestamp
	1,  // 13: talk_api.AssistantMessagingRequest.configuration:type_name -> talk_api.AssistantConversationConfiguration
	13, // 14: talk_api.AssistantMessagingRequest.message:type_name -> talk_api.AssistantConversationUserMessage
	33, // 15: talk_api.AssistantMessagingResponse.error:type_name -> Error
	1,  // 16: talk_api.AssistantMessagingResponse.configuration:type_name -> talk_api.AssistantConversationConfiguration
	10, // 17: talk_api.AssistantMessagingResponse.interruption:type_name -> talk_api.AssistantConversationInterruption
	13, // 18: talk_api.AssistantMessagingResponse.user:type_name -> talk_api.AssistantConversationUserMessage
	14, // 19: talk_api.AssistantMessagingResponse.assistant:type_name -> talk_api.AssistantConversationAssistantMessage
	34, // 20: talk_api.AssistantMessagingResponse.message:type_name -> AssistantConversationMessage
	2,  // 21: talk_api.AssistantMessagingResponse.disconnectAction:type_name -> talk_api.AssistantConversationDisconnectAction
	3,  // 22: talk_api.AssistantMessagingResponse.holdAction:type_name -> talk_api.AssistantConverstationHoldAction
	4,  // 23: talk_api.AssistantMessagingResponse.knowledgeRetrievalAction:type_name -> talk_api.AssistantConverstationKnowledgeRetrievalAction
	5,  // 24: talk_api.AssistantMessagingResponse.apiRequestAction:type_name -> talk_api.AssistantConverstationApiRequestAction
	6,  // 25: talk_api.AssistantMessagingResponse.endpointAction:type_name -> talk_api.AssistantConverstationEndpointAction
	7,  // 26: talk_api.AssistantMessagingResponse.deviationAction:type_name -> talk_api.AssistantConversationDeviationAction
	8,  // 27: talk_api.AssistantMessagingResponse.assistantTransferAction:type_name -> talk_api.AssistantConversationAssistantTransferAction
	9,  // 28: talk_api.AssistantMessagingResponse.phoneCallTransferAction:type_name -> talk_api.AssistantConversationPhoneCallTransferAction
	35, // 29: talk_api.CreateMessageMetricRequest.metrics:type_name -> Metric
	35, // 30: talk_api.CreateMessageMetricResponse.data:type_name -> Metric
	33, // 31: talk_api.CreateMessageMetricResponse.error:type_name -> Error
	35, // 32: talk_api.CreateConversationMetricRequest.metrics:type_name -> Metric
	35, // 33: talk_api.CreateConversationMetricResponse.data:type_name -> Metric
	33, // 34: talk_api.CreateConversationMetricResponse.error:type_name -> Error
	31, // 35: talk_api.CreatePhoneCallRequest.assistant:type_name -> AssistantDefinition
	28, // 36: talk_api.CreatePhoneCallRequest.metadata:type_name -> talk_api.CreatePhoneCallRequest.MetadataEntry
	29, // 37: talk_api.CreatePhoneCallRequest.args:type_name -> talk_api.CreatePhoneCallRequest.ArgsEntry
	30, // 38: talk_api.CreatePhoneCallRequest.options:type_name -> talk_api.CreatePhoneCallRequest.OptionsEntry
	36, // 39: talk_api.CreatePhoneCallResponse.data:type_name -> AssistantConversation
	33, // 40: talk_api.CreatePhoneCallResponse.error:type_name -> Error
	21, // 41: talk_api.CreateBulkPhoneCallRequest.phoneCalls:type_name -> talk_api.CreatePhoneCallRequest
	36, // 42: talk_api.CreateBulkPhoneCallResponse.data:type_name -> AssistantConversation
	33, // 43: talk_api.CreateBulkPhoneCallResponse.error:type_name -> Error
	37, // 44: talk_api.AssistantConversationConfiguration.MetadataEntry.value:type_name -> google.protobuf.Any
	37, // 45: talk_api.AssistantConversationConfiguration.ArgsEntry.value:type_name -> google.protobuf.Any
	37, // 46: talk_api.AssistantConversationConfiguration.OptionsEntry.value:type_name -> google.protobuf.Any
	37, // 47: talk_api.CreatePhoneCallRequest.MetadataEntry.value:type_name -> google.protobuf.Any
	37, // 48: talk_api.CreatePhoneCallRequest.ArgsEntry.value:type_name -> google.protobuf.Any
	37, // 49: talk_api.CreatePhoneCallRequest.OptionsEntry.value:type_name -> google.protobuf.Any
	15, // 50: talk_api.TalkService.AssistantTalk:input_type -> talk_api.AssistantMessagingRequest
	38, // 51: talk_api.TalkService.GetAllAssistantConversation:input_type -> GetAllAssistantConversationRequest
	39, // 52: talk_api.TalkService.GetAllConversationMessage:input_type -> GetAllConversationMessageRequest
	17, // 53: talk_api.TalkService.CreateMessageMetric:input_type -> talk_api.CreateMessageMetricRequest
	19, // 54: talk_api.TalkService.CreateConversationMetric:input_type -> talk_api.CreateConversationMetricRequest
	21, // 55: talk_api.TalkService.CreatePhoneCall:input_type -> talk_api.CreatePhoneCallRequest
	23, // 56: talk_api.TalkService.CreateBulkPhoneCall:input_type -> talk_api.CreateBulkPhoneCallRequest
	16, // 57: talk_api.TalkService.AssistantTalk:output_type -> talk_api.AssistantMessagingResponse
	40, // 58: talk_api.TalkService.GetAllAssistantConversation:output_type -> GetAllAssistantConversationResponse
	41, // 59: talk_api.TalkService.GetAllConversationMessage:output_type -> GetAllConversationMessageResponse
	18, // 60: talk_api.TalkService.CreateMessageMetric:output_type -> talk_api.CreateMessageMetricResponse
	20, // 61: talk_api.TalkService.CreateConversationMetric:output_type -> talk_api.CreateConversationMetricResponse
	22, // 62: talk_api.TalkService.CreatePhoneCall:output_type -> talk_api.CreatePhoneCallResponse
	24, // 63: talk_api.TalkService.CreateBulkPhoneCall:output_type -> talk_api.CreateBulkPhoneCallResponse
	57, // [57:64] is the sub-list for method output_type
	50, // [50:57] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_talk_api_proto_init() }
func file_talk_api_proto_init() {
	if File_talk_api_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_talk_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConversationConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConversationDisconnectAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConverstationHoldAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConverstationKnowledgeRetrievalAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConverstationApiRequestAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConverstationEndpointAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConversationDeviationAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConversationAssistantTransferAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConversationPhoneCallTransferAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConversationInterruption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConversationMessageTextContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConversationMessageAudioContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConversationUserMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantConversationAssistantMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantMessagingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*AssistantMessagingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMessageMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMessageMetricResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CreateConversationMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CreateConversationMetricResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePhoneCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePhoneCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CreateBulkPhoneCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talk_api_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CreateBulkPhoneCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_talk_api_proto_msgTypes[12].OneofWrappers = []any{
		(*AssistantConversationUserMessage_Audio)(nil),
		(*AssistantConversationUserMessage_Text)(nil),
	}
	file_talk_api_proto_msgTypes[13].OneofWrappers = []any{
		(*AssistantConversationAssistantMessage_Audio)(nil),
		(*AssistantConversationAssistantMessage_Text)(nil),
	}
	file_talk_api_proto_msgTypes[14].OneofWrappers = []any{
		(*AssistantMessagingRequest_Configuration)(nil),
		(*AssistantMessagingRequest_Message)(nil),
	}
	file_talk_api_proto_msgTypes[15].OneofWrappers = []any{
		(*AssistantMessagingResponse_Configuration)(nil),
		(*AssistantMessagingResponse_Interruption)(nil),
		(*AssistantMessagingResponse_User)(nil),
		(*AssistantMessagingResponse_Assistant)(nil),
		(*AssistantMessagingResponse_Message)(nil),
		(*AssistantMessagingResponse_DisconnectAction)(nil),
		(*AssistantMessagingResponse_HoldAction)(nil),
		(*AssistantMessagingResponse_KnowledgeRetrievalAction)(nil),
		(*AssistantMessagingResponse_ApiRequestAction)(nil),
		(*AssistantMessagingResponse_EndpointAction)(nil),
		(*AssistantMessagingResponse_DeviationAction)(nil),
		(*AssistantMessagingResponse_AssistantTransferAction)(nil),
		(*AssistantMessagingResponse_PhoneCallTransferAction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_talk_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_talk_api_proto_goTypes,
		DependencyIndexes: file_talk_api_proto_depIdxs,
		EnumInfos:         file_talk_api_proto_enumTypes,
		MessageInfos:      file_talk_api_proto_msgTypes,
	}.Build()
	File_talk_api_proto = out.File
	file_talk_api_proto_rawDesc = nil
	file_talk_api_proto_goTypes = nil
	file_talk_api_proto_depIdxs = nil
}
